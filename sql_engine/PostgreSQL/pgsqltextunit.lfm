object pgSqlTextModule: TpgSqlTextModule
  OldCreateOrder = False
  Height = 850
  HorizontalOffset = 309
  VerticalOffset = 1
  Width = 1081
  object sqlPgDepends: TStrHolder
    Capacity = 62
    Macros = <>
    Left = 40
    Top = 328
    StrData = (
      ''
      '73656c6563742064697374696e6374'
      '202070675f646570656e642e6f626a69642c'
      '202070675f646570656e642e7265666f626a69642c'
      ''
      '20202d2d446570656e64'
      '202070675f646570656e642e636c61737369642c'
      '2020636c617373312e72656c6e616d6520617320645f636c6173735f6e616d652c'
      '2020645f636c6173732e72656c6e616d6520617320645f72656c5f6e616d652c'
      '2020645f636c6173732e72656c6e616d65737061636520617320645f72656c5f6e616d655f73706173652c'
      '20206361737428645f636c6173732e72656c6b696e6420617320766172636861722834292920617320645f72656c5f6b696e642c'
      '2d2d202070675f646570656e642e6f626a73756269642c'
      '2020645f747970652e7479706e616d6520617320645f7479706e616d652c'
      '2020645f747970652e7479706e616d65737061636520617320645f7479706e616d6573706163652c'
      '2020645f636f6e73747261696e742e636f6e6e616d6520617320645f636f6e6e616d652c'
      '2020645f636f6e73747261696e742e636f6e6e616d65737061636520617320645f636f6e6e616d6573706163652c'
      '20206361737428645f636f6e73747261696e742e636f6e7479706520617320766172636861722834292920617320645f636f6e747970652c'
      '2020645f747269676765722e74676e616d6520617320645f74676e616d652c'
      '202070675f6765745f6578707228645f617474726465662e616462696e2c20645f617474726465662e616472656c69642920617320645f61647372632c'
      '2020645f6e616d6573706163652e6e73706e616d6520617320645f6e73706e616d652c'
      '2020645f70726f632e70726f6e616d65737061636520617320645f70726f6e616d6573706163652c'
      '2020645f70726f632e70726f6e616d6520617320645f70726f6e616d652c'
      ''
      '20202d2d5265666572'
      '202070675f646570656e642e726566636c61737369642c'
      '2020636c617373322e72656c6e616d6520617320725f636c6173735f6e616d652c'
      '2020725f636c6173732e72656c6e616d6520617320725f72656c5f6e616d652c'
      '2020725f636c6173732e72656c6e616d65737061636520617320725f72656c5f6e616d655f73706173652c'
      '20206361737428725f636c6173732e72656c6b696e6420617320766172636861722834292920617320725f72656c5f6b696e642c'
      '2d2d202070675f646570656e642e7265666f626a73756269642c'
      '2020725f747970652e7479706e616d6520617320725f7479706e616d652c'
      '2020725f747970652e7479706e616d65737061636520617320725f7479706e616d6573706163652c'
      '2020725f636f6e73747261696e742e636f6e6e616d6520617320725f636f6e6e616d652c'
      '2020725f636f6e73747261696e742e636f6e6e616d65737061636520617320725f636f6e6e616d6573706163652c'
      '20206361737428725f636f6e73747261696e742e636f6e7479706520617320766172636861722834292920617320725f636f6e747970652c'
      '2020725f747269676765722e74676e616d6520617320725f74676e616d652c'
      '202070675f6765745f6578707228725f617474726465662e616462696e2c20725f617474726465662e616472656c69642920617320725f61647372632c'
      '2020725f6e616d6573706163652e6e73706e616d6520617320725f6e73706e616d652c'
      '2020725f70726f632e70726f6e616d65737061636520617320725f70726f6e616d6573706163652c'
      '2020725f70726f632e70726f6e616d6520617320725f70726f6e616d65'
      '66726f6d'
      '202070675f646570656e64'
      '2020696e6e6572206a6f696e2070675f636c61737320636c61737331206f6e202870675f646570656e642e636c6173736964203d20636c617373312e6f696429'
      '20206c656674206f75746572206a6f696e2070675f636c61737320645f636c617373206f6e202870675f646570656e642e6f626a6964203d20645f636c6173732e6f696429'
      '20206c656674206f75746572206a6f696e2070675f7479706520645f74797065206f6e202870675f646570656e642e6f626a6964203d20645f747970652e6f696429'
      '20206c656674206f75746572206a6f696e2070675f636f6e73747261696e7420645f636f6e73747261696e74206f6e202870675f646570656e642e6f626a6964203d20645f636f6e73747261696e742e6f696429'
      '20206c656674206f75746572206a6f696e2070675f7472696767657220645f74726967676572206f6e202870675f646570656e642e6f626a6964203d20645f747269676765722e6f696429'
      '20206c656674206f75746572206a6f696e2070675f6174747264656620645f61747472646566206f6e202870675f646570656e642e6f626a6964203d20645f617474726465662e6f696429'
      '20206c656674206f75746572206a6f696e2070675f6e616d65737061636520645f6e616d657370616365206f6e202870675f646570656e642e6f626a6964203d20645f6e616d6573706163652e6f696429'
      '20206c656674206f75746572206a6f696e2070675f70726f6320645f70726f63206f6e202870675f646570656e642e6f626a6964203d20645f70726f632e6f696429'
      ''
      '20206c656674206f75746572206a6f696e2070675f636c61737320636c61737332206f6e202870675f646570656e642e726566636c6173736964203d20636c617373322e6f696429'
      '20206c656674206f75746572206a6f696e2070675f636c61737320725f636c617373206f6e202870675f646570656e642e7265666f626a6964203d20725f636c6173732e6f696429'
      '20206c656674206f75746572206a6f696e2070675f7479706520725f74797065206f6e202870675f646570656e642e7265666f626a6964203d20725f747970652e6f696429'
      '20206c656674206f75746572206a6f696e2070675f636f6e73747261696e7420725f636f6e73747261696e74206f6e202870675f646570656e642e7265666f626a6964203d20725f636f6e73747261696e742e6f696429'
      '20206c656674206f75746572206a6f696e2070675f7472696767657220725f74726967676572206f6e202870675f646570656e642e7265666f626a6964203d20725f747269676765722e6f696429'
      '20206c656674206f75746572206a6f696e2070675f6174747264656620725f61747472646566206f6e202870675f646570656e642e7265666f626a6964203d20725f617474726465662e6f696429'
      '20206c656674206f75746572206a6f696e2070675f6e616d65737061636520725f6e616d657370616365206f6e202870675f646570656e642e7265666f626a6964203d20725f6e616d6573706163652e6f696429'
      '20206c656674206f75746572206a6f696e2070675f70726f6320725f70726f63206f6e202870675f646570656e642e6f626a6964203d20725f70726f632e6f696429'
      '7768657265'
      '2020202070675f646570656e642e6f626a6964203d203a6f626a6964'
      '20206f72'
      '2020202070675f646570656e642e7265666f626a6964203d203a6f626a6964'
    )
  end
  object sqlPgGetACLParams: TStrHolder
    Macros = <>
    Left = 40
    Top = 400
  end
  object sql_Pg_Rules: TStrHolder
    Capacity = 64
    Macros = <>
    Left = 510
    Top = 36
    StrData = (
      ''
      '73656c656374'
      '2020636173742870675f726577726974652e6f696420617320696e7465676572292c'
      '202070675f636c6173732e72656c6e616d6573706163652c'
      '202070675f726577726974652e72756c656e616d652c'
      '202070675f726577726974652e65765f747970652c'
      '202070675f726577726974652e65765f636c617373206173206f776e5f646174612c'
      '20202873656c656374'
      '202020202070675f6465736372697074696f6e2e6465736372697074696f6e'
      '20202066726f6d'
      '202020202070675f6465736372697074696f6e'
      '2020207768657265'
      '2020202020202070675f6465736372697074696f6e2e6f626a7375626964203d2030'
      '2020202020616e64'
      '2020202020202070675f6465736372697074696f6e2e6f626a6f6964203d2070675f726577726974652e6f696429206173206465736372697074696f6e'
      '66726f6d'
      '202070675f72657772697465'
      '2020696e6e6572206a6f696e2070675f636c617373206f6e202870675f636c6173732e6f6964203d2070675f726577726974652e65765f636c61737329'
      '7768657265'
      '202070675f726577726974652e72756c656e616d65203c3e20275f52455455524e27'
      '6f72646572206279'
      '202070675f726577726974652e72756c656e616d65'
    )
  end
  object sql_Pg_Rule: TStrHolder
    Capacity = 64
    Macros = <>
    Left = 510
    Top = 104
    StrData = (
      ''
      '73656c656374'
      '2020636173742870675f726577726974652e6f696420617320696e7465676572292c'
      '202070675f636c6173732e72656c6e616d6573706163652c'
      '202070675f726577726974652e72756c656e616d652c'
      '202070675f726577726974652e65765f747970652c'
      '202070675f726577726974652e65765f636c617373206173206f776e5f646174612c'
      '202070675f6765745f72756c656465662870675f726577726974652e6f6964292061732073716c5f646566696e652c'
      '20202873656c656374'
      '202020202070675f6465736372697074696f6e2e6465736372697074696f6e'
      '20202066726f6d'
      '202020202070675f6465736372697074696f6e'
      '2020207768657265'
      '2020202020202070675f6465736372697074696f6e2e6f626a7375626964203d2030'
      '2020202020616e64'
      '2020202020202070675f6465736372697074696f6e2e6f626a6f6964203d2070675f726577726974652e6f696429206173206465736372697074696f6e'
      '66726f6d'
      '202070675f72657772697465'
      '2020696e6e6572206a6f696e2070675f636c617373206f6e202870675f636c6173732e6f6964203d2070675f726577726974652e65765f636c61737329'
      '7768657265'
      '202070675f726577726974652e72756c656e616d65203d203a72756c656e616d65'
    )
  end
  object sqlSequence: TStrHolder
    Capacity = 18
    Macros = <    
      item
        Name = 's'
      end    
      item
        Name = 'd'
      end>
    Left = 37
    Top = 608
    StrData = (
      ''
      '73656c656374'
      '202070675f636c6173732e6f69642c'
      '202025732e2a2c'
      '202070675f636c6173732e72656c61636c2c'
      '20202873656c656374'
      '202020202070675f6465736372697074696f6e2e6465736372697074696f6e'
      '20202066726f6d'
      '202020202070675f6465736372697074696f6e'
      '2020202020696e6e6572206a6f696e2070675f636c6173732070675f636c61737331206f6e202870675f636c617373312e6f6964203d2070675f6465736372697074696f6e2e636c6173736f696429'
      '2020207768657265'
      '202020202070675f6465736372697074696f6e2e6f626a6f6964203d2070675f636c6173732e6f696420616e642070675f6465736372697074696f6e2e6f626a7375626964203d203020616e642070675f636c617373312e72656c6e616d653d2770675f636c6173732729206173206465736372697074696f6e'
      '66726f6d'
      '20202573'
      '2020696e6e6572206a6f696e2070675f636c617373206f6e202870675f636c6173732e72656c6e616d65203d202725732729'
      '7768657265'
      '2020202070675f636c6173732e72656c6b696e64203d20275327'
      '2020616e64'
      '2020202070675f636c6173732e72656c6e616d657370616365203d202564'
    )
  end
  object ttt1: TStrHolder
    Capacity = 16
    Macros = <>
    Left = 436
    Top = 700
    StrData = (
      ''
      '73656c656374'
      '2020636173742870675f70726f632e6f696420617320696e7465676572292c20'
      '202070675f70726f632e70726f6e616d6573706163652c20'
      '2020636173742870675f70726f632e70726f6e616d6520617320766172636861722832353029292061732070726f6e616d652c20'
      '202070675f70726f632e70726f726574747970652c'
      '20202873656c656374'
      '202020202070675f6465736372697074696f6e2e6465736372697074696f6e'
      '20202066726f6d'
      '202020202070675f6465736372697074696f6e'
      '2020202020696e6e6572206a6f696e2070675f636c617373206f6e202870675f636c6173732e6f6964203d2070675f6465736372697074696f6e2e636c6173736f696429'
      '2020207768657265'
      '202020202070675f6465736372697074696f6e2e6f626a6f6964203d2070675f70726f632e6f696420616e642070675f6465736372697074696f6e2e6f626a7375626964203d203020616e642070675f636c6173732e72656c6e616d65203d202770675f70726f632729206173206465736372697074696f6e'
      '66726f6d'
      '202070675f70726f6320'
      '6f72646572206279'
      '202070675f70726f632e70726f6e616d65'
    )
  end
  object pgCollations: TStrHolder
    Capacity = 64
    Macros = <>
    Left = 520
    Top = 336
    StrData = (
      ''
      '73656c656374'
      '2020636173742870675f636f6c6c6174696f6e2e6f696420617320696e7465676572292c'
      '2020636173742870675f636f6c6c6174696f6e2e636f6c6c6e616d65737061636520617320696e7465676572292c'
      '202070675f636f6c6c6174696f6e2e636f6c6c6e616d652c'
      '202070675f636f6c6c6174696f6e2e636f6c6c6f776e65722c'
      '202070675f636f6c6c6174696f6e2e636f6c6c637479706520617320646174612c'
      '20202873656c656374'
      '202020202070675f6465736372697074696f6e2e6465736372697074696f6e'
      '20202066726f6d'
      '202020202070675f6465736372697074696f6e20696e6e6572206a6f696e2070675f636c617373206f6e2070675f636c6173732e6f69643d70675f6465736372697074696f6e2e636c6173736f6964'
      '2020207768657265'
      '202020202070675f6465736372697074696f6e2e6f626a6f6964203d2070675f636f6c6c6174696f6e2e6f696420616e642070675f6465736372697074696f6e2e6f626a7375626964203d203020616e642070675f636c6173732e72656c6e616d65203d202770675f636f6c6c6174696f6e2729206173206465736372697074696f6e'
      ''
      '66726f6d'
      '202070675f636f6c6c6174696f6e'
      ''
      ''
    )
  end
  object sqlSequence_v10: TStrHolder
    Capacity = 32
    Macros = <    
      item
        Name = 'd'
      end>
    Left = 104
    Top = 608
    StrData = (
      ''
      '73656c656374'
      '202070675f636c6173732e6f69642c'
      '202070675f636c6173732e72656c6e616d6573706163652c'
      '202070675f73657175656e63652e73657172656c69642c'
      '202070675f73657175656e63652e73657174797069642c'
      '202070675f73657175656e63652e73657173746172742061732073746172745f76616c75652c'
      '202070675f73657175656e63652e736571696e6372656d656e7420617320696e6372656d656e745f62792c'
      '202070675f73657175656e63652e7365716d6178206173206d61785f76616c75652c'
      '202070675f73657175656e63652e7365716d696e206173206d696e5f76616c75652c'
      '202070675f73657175656e63652e73657163616368652061732063616368655f76616c75652c'
      '202070675f73657175656e63652e7365716379636c652061732069735f6379636c65642c'
      '202070675f636c6173732e72656c61636c2c'
      '202020202020202043415345'
      '2020202020202020202020205748454e206861735f73657175656e63655f70726976696c6567652870675f636c6173732e6f69642c202753454c4543542c55534147452729205448454e2070675f73657175656e63655f6c6173745f76616c75652870675f636c6173732e6f696429'
      '202020202020202020202020454c5345204e554c4c'
      '2020202020202020454e44204153206c6173745f76616c75652c'
      '20202873656c656374'
      '202020202070675f6465736372697074696f6e2e6465736372697074696f6e'
      '20202066726f6d'
      '202020202070675f6465736372697074696f6e'
      '2020202020696e6e6572206a6f696e2070675f636c6173732070675f636c61737331206f6e202870675f636c617373312e6f6964203d2070675f6465736372697074696f6e2e636c6173736f696429'
      '2020207768657265'
      '202020202070675f6465736372697074696f6e2e6f626a6f6964203d2070675f636c6173732e6f696420616e642070675f6465736372697074696f6e2e6f626a7375626964203d203020616e642070675f636c617373312e72656c6e616d653d2770675f636c6173732729206173206465736372697074696f6e'
      '66726f6d'
      '202070675f73657175656e6365'
      '2020696e6e6572206a6f696e2070675f636c617373206f6e202870675f636c6173732e6f6964203d2070675f73657175656e63652e73657172656c696429'
      '7768657265'
      '2020202070675f636c6173732e72656c6e616d65203d2027257327'
      '2020616e64'
      '2020202070675f636c6173732e72656c6b696e64203d20275327'
      '2020616e64'
      '2020202070675f636c6173732e72656c6e616d657370616365203d202564'
    )
  end
  object sPGStatistics: TRxTextHolder
    Highlighter = rxSynSQL
    Items = <    
      item
        Caption = 'Stat1_Sizes'
        Lines.Strings = (
          'SELECT'
          '  pg_total_relation_size(pg_class.oid) AS total,'
          '  pg_indexes_size(pg_class.oid) AS INDEX,'
          '  (case when (pg_class.reltoastrelid <> 0) then pg_total_relation_size(pg_class.reltoastrelid) else 0 end) AS toast,'
          '  pg_class.reltuples as avg_rec_count,'
          '  pg_class.relpages'
          'FROM'
          '  pg_class'
          'WHERE'
          '  pg_class.oid = :oid'
          ''
        )
      end    
      item
        Caption = 'Stat2_Functions'
        Lines.Strings = (
          'SELECT'
          '  pg_stat_user_functions.*'
          'FROM'
          '  pg_stat_user_functions'
          'WHERE'
          '  pg_stat_user_functions.funcid = :funcid'
        )
      end    
      item
        Caption = 'ServerSettings'
        Lines.Strings = (
          'select'
          '  pg_settings.name,'
          '  pg_settings.setting,'
          '  pg_settings.unit,'
          '  pg_settings.short_desc'
          'from'
          '  pg_settings'
          '/*where'
          '  pg_settings.category = ''Autovacuum'''
          ''
          '*/'
        )
      end>
    Left = 968
    Top = 32
  end
  object sForeignObj: TRxTextHolder
    Highlighter = rxSynSQL
    Items = <    
      item
        Caption = 'ForegnServerRefresh'
        Lines.Strings = (
          'select'
          '  pg_foreign_server.oid,'
          '  pg_foreign_server.srvname,'
          '  pg_foreign_server.srvowner,'
          '  pg_foreign_server.srvfdw,'
          '  pg_foreign_server.srvtype,'
          '  pg_foreign_server.srvversion,'
          '  pg_foreign_server.srvacl,'
          '  pg_foreign_server.srvoptions,'
          '  (select'
          '     pg_description.description'
          '   from'
          '     pg_description inner join pg_class on pg_class.oid=pg_description.classoid'
          '   where'
          '     pg_description.objoid = pg_foreign_server.oid and pg_description.objsubid = 0 and pg_class.relname = ''pg_foreign_server'') as description'
          'from'
          '  pg_foreign_server'
          'where'
          '  %Macro1'
          ''
          ''
        )
      end    
      item
        Caption = 'pgFServRefresh'
        Lines.Strings = (
          'select'
          '  pg_foreign_server.oid,'
          '  pg_foreign_server.srvname,'
          '  pg_foreign_server.srvowner,'
          '  pg_foreign_server.srvfdw,'
          '  pg_foreign_server.srvtype,'
          '  pg_foreign_server.srvversion,'
          '  pg_foreign_server.srvacl,'
          '  pg_foreign_server.srvoptions,'
          '  (select'
          '     pg_description.description'
          '   from'
          '     pg_description inner join pg_class on pg_class.oid=pg_description.classoid'
          '   where'
          '     pg_description.objoid = pg_foreign_server.oid and pg_description.objsubid = 0 and pg_class.relname = ''pg_foreign_server'') as description'
          'from'
          '  pg_foreign_server'
          'where'
          '  %Macro1'
          ''
          ''
        )
      end    
      item
        Caption = 'pgFSUserMapping'
        Lines.Strings = (
          'select'
          '  cast(pg_user_mappings.umid as integer),'
          '  cast(pg_user_mappings.srvid as integer),'
          '  pg_user_mappings.usename,'
          '  pg_user_mappings.umuser,'
          '  pg_user_mappings.umoptions as data,'
          '  (select'
          '     pg_description.description'
          '   from'
          '     pg_description inner join pg_class on pg_class.oid=pg_description.classoid'
          '   where'
          '     pg_description.objoid = pg_user_mappings.umid and pg_description.objsubid = 0 and pg_class.relname = ''pg_user_mappings'') as description'
          'from'
          '  pg_user_mappings'
          'order by'
          '  pg_user_mappings.usename'
          ''
          ''
        )
      end    
      item
        Caption = 'pgFSUserMapRefresh'
        Lines.Strings = (
          'select'
          '  pg_user_mapping.oid,'
          '  pg_user_mapping.*'
          'from'
          '  pg_user_mapping'
          'where'
          '  pg_user_mapping.oid = :umid'
          ''
        )
      end    
      item
        Caption = 'sFDW'
        Lines.Strings = (
          'select'
          '  cast(pg_foreign_data_wrapper.oid as integer),'
          '  cast(pg_foreign_data_wrapper.oid as integer),'
          '  pg_foreign_data_wrapper.fdwname,'
          '  pg_foreign_data_wrapper.fdwowner,'
          '  pg_foreign_data_wrapper.fdwoptions as data,'
          '  pg_foreign_data_wrapper.fdwacl as acl_list,'
          '  (select'
          '     pg_description.description'
          '   from'
          '     pg_description inner join pg_class on pg_class.oid=pg_description.classoid'
          '   where'
          '     pg_description.objoid = pg_foreign_data_wrapper.oid and pg_description.objsubid = 0 and pg_class.relname = ''pg_foreign_data_wrapper'') as description'
          'from'
          '  pg_foreign_data_wrapper'
          'order by'
          '  pg_foreign_data_wrapper.fdwname'
          ''
        )
      end    
      item
        Caption = 'sFDWobj'
        Lines.Strings = (
          'select'
          '  pg_foreign_data_wrapper.oid,'
          '  pg_foreign_data_wrapper.*,'
          '  (select'
          '     pg_description.description'
          '   from'
          '     pg_description inner join pg_class on pg_class.oid=pg_description.classoid'
          '   where'
          '     pg_description.objoid = pg_foreign_data_wrapper.oid and pg_description.objsubid = 0 and pg_class.relname = ''pg_foreign_data_wrapper'') as description,'
          ''
          '  COALESCE(ns_validator.nspname, '''') || ''.'' || proc_validator.proname as validator_name,'
          '  COALESCE(ns_handler.nspname, '''') || ''.'' || proc_handler.proname as handler_name'
          'from'
          '  pg_foreign_data_wrapper'
          '  LEFT OUTER JOIN pg_proc proc_validator ON proc_validator.oid = pg_foreign_data_wrapper.fdwvalidator'
          '  LEFT OUTER JOIN pg_proc proc_handler ON proc_handler.oid = pg_foreign_data_wrapper.fdwhandler'
          '  LEFT OUTER JOIN pg_namespace ns_validator ON ns_validator.oid = proc_validator.pronamespace'
          '  LEFT OUTER JOIN pg_namespace ns_handler ON ns_handler.oid = proc_handler.pronamespace'
          'where'
          '  pg_foreign_data_wrapper.oid = :oid'
        )
      end    
      item
        Caption = 'sFServ'
        Lines.Strings = (
          'select'
          '  cast(pg_foreign_server.oid as integer),'
          '  cast(pg_foreign_server.srvfdw as integer),'
          '  pg_foreign_server.srvname,'
          '  pg_foreign_server.srvowner,'
          '  pg_foreign_server.srvoptions as data,'
          '  pg_foreign_server.srvacl as acl_list,'
          '  (select'
          '     pg_description.description'
          '   from'
          '     pg_description inner join pg_class on pg_class.oid=pg_description.classoid'
          '   where'
          '     pg_description.objoid = pg_foreign_server.oid and pg_description.objsubid = 0 and pg_class.relname = ''pg_foreign_server'') as description'
          'from'
          '  pg_foreign_server'
          'order by'
          '  pg_foreign_server.srvname'
          ''
        )
      end    
      item
        Caption = 'sForeignTable'
        Lines.Strings = (
          'select'
          '  cast(pg_class.oid as integer),'
          '  pg_class.reltablespace,'
          '  pg_class.relname,'
          '  pg_class.relowner,'
          '  pg_class.relhassubclass,'
          '  pg_class.relpersistence,'
          '  pg_class.reloptions,'
          '  tst.reloptions as tst_reloptions,'
          '  pg_foreign_table.ftserver,'
          '  pg_foreign_table.ftoptions,'
          '  pg_class.relacl,'
          '  (select'
          '     pg_description.description'
          '   from'
          '     pg_description'
          '     inner join pg_class pg_class1 on (pg_class1.oid = pg_description.classoid)'
          '   where'
          '       pg_description.objsubid = 0'
          '     and'
          '       pg_class1.relname = ''pg_class'''
          '     and'
          '       pg_description.objoid = pg_class.oid) as description'
          'from'
          '  pg_class'
          '  LEFT OUTER JOIN pg_class tst ON tst.oid = pg_class.reltoastrelid'
          '  inner join pg_foreign_table on (pg_foreign_table.ftrelid = pg_class.oid)'
          'WHERE'
          '    (pg_class.relkind = ''f'')'
          '  and'
          '    (pg_class.relnamespace = :relnamespace)'
          '  and'
          '    (pg_class.relname  =  :relname)'
          ''
        )
      end>
    Left = 432
    Top = 416
  end
  object sqlTableSpaces: TRxTextHolder
    Highlighter = rxSynSQL
    Items = <    
      item
        Caption = 'sqlTableSpace'
        Lines.Strings = (
          'select'
          '  cast(pg_tablespace.oid as integer),'
          '  cast(pg_tablespace.oid as integer),'
          '  pg_tablespace.spcname,'
          '  (select'
          '     pg_description.description'
          '   from'
          '     pg_description'
          '   where'
          '     pg_description.objoid = pg_tablespace.oid and pg_description.objsubid = 0) as description,'
          '  pg_tablespace.spcacl as acl_list'
          'from'
          '  pg_tablespace'
          ''
        )
      end    
      item
        Caption = 'sqlTableSpace_8'
        Lines.Strings = (
          'select'
          '  cast(pg_tablespace.oid as integer),'
          '  pg_tablespace.spcname,'
          '  pg_tablespace.spcowner,'
          '  pg_tablespace.spclocation,'
          '  pg_tablespace.spcacl,'
          '  (select'
          '     pg_description.description'
          '   from'
          '     pg_description'
          '   where'
          '     pg_description.objoid = pg_tablespace.oid and pg_description.objsubid = 0) as description'
          'from'
          '  pg_tablespace'
          'where'
          '    pg_tablespace.spcname = :spcname'
          '  or'
          '    pg_tablespace.oid = :oid'
          ''
        )
      end    
      item
        Caption = 'sqlTableSpace_9'
        Lines.Strings = (
          'select'
          '  cast(pg_tablespace.oid as integer) as oid,'
          '  pg_tablespace.*,'
          '  pg_catalog.pg_tablespace_location(pg_tablespace.oid) AS spclocation,'
          '  pg_catalog.shobj_description(pg_tablespace.oid, ''pg_tablespace'') as description'
          'from'
          '  pg_tablespace'
          'where'
          '    pg_tablespace.spcname = :spcname'
          '  or'
          '    pg_tablespace.oid = :oid'
          ''
        )
      end>
    Left = 37
    Top = 104
  end
  object sql_PG_LangList: TRxTextHolder
    Highlighter = rxSynSQL
    Items = <    
      item
        Caption = 'sql_PG_LangList_v8'
        Lines.Strings = (
          'select'
          '  cast(pg_language.oid as integer),'
          '  cast(pg_language.oid as integer),'
          '  pg_language.lanname,'
          ''
          '  (select'
          '     pg_description.description'
          '   from'
          '     pg_description'
          '   where'
          '     pg_description.objoid = pg_language.oid and pg_description.objsubid = 0) as description'
          'from'
          '  pg_language'
          'order by'
          '  pg_language.oid'
          ''
        )
      end    
      item
        Caption = 'sql_PG_LangList'
        Lines.Strings = (
          'select'
          '  cast(pg_language.oid as integer),'
          '  cast(pg_language.oid as integer),'
          '  pg_language.lanname,'
          ''
          '  pg_language.lanowner,'
          '  pg_language.lanispl,'
          '  pg_language.lanpltrusted,'
          '  pg_language.lanplcallfoid,'
          '  pg_language.lanvalidator,'
          '  pg_language.lanacl as acl_list,'
          ''
          '  (select'
          '     pg_description.description'
          '   from'
          '     pg_description'
          '   where'
          '     pg_description.objoid = pg_language.oid and pg_description.objsubid = 0) as description'
          'from'
          '  pg_language'
          'order by'
          '  pg_language.oid'
          ''
        )
      end>
    Left = 432
    Top = 480
  end
  object sPGSystem: TRxTextHolder
    Highlighter = rxSynSQL
    Items = <    
      item
        Caption = 'sPGAm'
        Lines.Strings = (
          'select'
          '  pg_am.amname'
          'from'
          '  pg_am'
          ''
        )
      end    
      item
        Caption = 'sPGSettings'
        Lines.Strings = (
          'SELECT'
          '  name,'
          '  vartype,'
          '  min_val,'
          '  max_val,'
          '  enumvals'
          'FROM'
          '  pg_settings'
          'WHERE'
          '  context in (''user'', ''superuser'')'
        )
      end>
    Left = 968
    Top = 96
  end
  object sqlPGFunctions: TRxTextHolder
    Highlighter = rxSynSQL
    Items = <    
      item
        Caption = 'PGFuntion'
        Lines.Strings = (
          'select'
          '  pg_proc.oid,'
          '  pg_proc.*,'
          '  cast(array_dims(pg_proc.proargnames) as varchar(20)) as name_dims,'
          '  (select'
          '     pg_description.description'
          '   from'
          '     pg_description'
          '     inner join pg_class on (pg_class.oid = pg_description.classoid)'
          '   where'
          '     pg_description.objoid = pg_proc.oid and pg_description.objsubid = 0 and pg_class.relname = ''pg_proc'') as description,'
          '  pg_get_expr(pg_proc.proargdefaults, 0) as def_values'
          'from'
          '  pg_proc'
          'where'
          '  ('
          '      (pg_proc.proname = :proname)'
          '    or'
          '      pg_proc.oid = :oid'
          '  )'
          '  and'
          '    (pg_proc.pronamespace = :pronamespace)'
          ''
        )
      end    
      item
        Caption = 'PGFuntionList'
        Lines.Strings = (
          'select'
          '  cast(pg_proc.oid as integer),'
          '  pg_proc.pronamespace,'
          '  cast(pg_proc.proname as varchar(250)) as proname,'
          '  pg_proc.prorettype,'
          '  pg_proc.proacl as acl_list,'
          '  COALESCE(cast(pg_proc.proargmodes as varchar), '''') || ''|'' ||'
          '  COALESCE(cast(pg_proc.proargtypes as varchar), '''') || ''|'' ||'
          '  COALESCE(cast(pg_proc.proargnames as varchar), '''') as data,'
          '  (select'
          '     pg_description.description'
          '   from'
          '     pg_description'
          '     inner join pg_class on (pg_class.oid = pg_description.classoid)'
          '   where'
          '     pg_description.objoid = pg_proc.oid and pg_description.objsubid = 0 and pg_class.relname = ''pg_proc'') as description'
          'from'
          '  pg_proc'
          'order by'
          '  pg_proc.proname'
          ''
        )
      end    
      item
        Caption = 'PGFuntionList_11'
        Lines.Strings = (
          'select'
          '  cast(pg_proc.oid as integer),'
          '  pg_proc.pronamespace,'
          '  cast(pg_proc.proname as varchar(250)) as proname,'
          '  pg_proc.prorettype,'
          '  pg_proc.proacl as acl_list,'
          '  COALESCE(cast(pg_proc.proargmodes as varchar), '''') || ''|'' ||'
          '  COALESCE(cast(pg_proc.proargtypes as varchar), '''') || ''|'' ||'
          '  COALESCE(cast(pg_proc.proargnames as varchar), '''') as data,'
          '  (select'
          '     pg_description.description'
          '   from'
          '     pg_description'
          '     inner join pg_class on (pg_class.oid = pg_description.classoid)'
          '   where'
          '     pg_description.objoid = pg_proc.oid and pg_description.objsubid = 0 and pg_class.relname = ''pg_proc'') as description,'
          '  pg_proc.prokind as kind_2'
          'from'
          '  pg_proc'
          'order by'
          '  pg_proc.proname'
          ''
        )
      end>
    Left = 432
    Top = 32
  end
  object sPGClass: TRxTextHolder
    Highlighter = rxSynSQL
    Items = <    
      item
        Caption = 'pgClass'
        Lines.Strings = (
          'select'
          '  cast(pg_class.oid as integer),'
          '  pg_class.relnamespace,'
          '  cast(pg_class.relname as varchar(250)) as relname,'
          '  cast(pg_class.relkind as varchar(5)) as kind_1,'
          '  pg_class.relacl as acl_list,'
          '  (select'
          '     pg_description.description'
          '   from'
          '     pg_description'
          '     inner join pg_class pg_class1 on (pg_class1.oid = pg_description.classoid)'
          '   where'
          '       pg_description.objsubid = 0'
          '     and'
          '       pg_class1.relname = ''pg_class'''
          '     and'
          '       pg_description.objoid = pg_class.oid) as description'
          'from'
          '  pg_class'
          'order by'
          '  pg_class.relname'
          ''
        )
      end    
      item
        Caption = 'pgClass10'
        Lines.Strings = (
          'select'
          '  cast(pg_class.oid as integer),'
          '  pg_class.relnamespace,'
          '  cast(pg_class.relname as varchar(250)) as relname,'
          '  cast(pg_class.relkind as varchar(5)) as kind_1,'
          '  cast(pg_class.relispartition as varchar) as data,'
          '  pg_class.relacl as acl_list,'
          '  (select'
          '     pg_description.description'
          '   from'
          '     pg_description'
          '     inner join pg_class pg_class1 on (pg_class1.oid = pg_description.classoid)'
          '   where'
          '       pg_description.objsubid = 0'
          '     and'
          '       pg_class1.relname = ''pg_class'''
          '     and'
          '       pg_description.objoid = pg_class.oid) as description'
          'from'
          '  pg_class'
          'order by'
          '  pg_class.relname'
          ''
        )
      end>
    Left = 432
    Top = 256
  end
  object sPGRelation: TRxTextHolder
    Highlighter = rxSynSQL
    Items = <    
      item
        Caption = 'sqlPGRelation'
        Lines.Strings = (
          'select'
          '  cast(pg_class.oid as integer),'
          '  pg_class.*,'
          '  tst.reloptions as tst_reloptions,'
          '  (select'
          '     pg_description.description'
          '   from'
          '     pg_description'
          '     inner join pg_class pg_class1 on (pg_class1.oid = pg_description.classoid)'
          '   where'
          '       pg_description.objsubid = 0'
          '     and'
          '       pg_class1.relname = ''pg_class'''
          '     and'
          '       pg_description.objoid = pg_class.oid) as description'
          'from'
          '  pg_class'
          '  LEFT OUTER JOIN pg_class tst ON tst.oid = pg_class.reltoastrelid'
          'WHERE'
          '    (pg_class.relkind in (''r'', ''p''))'
          '  and'
          '    (pg_class.relnamespace = :relnamespace)'
          '  and'
          '    (pg_class.relname  =  :relname)'
          ''
        )
      end    
      item
        Caption = 'sqlPGRelation10'
        Lines.Strings = (
          'select'
          '  cast(pg_class.oid as integer),'
          '  pg_class.*,'
          '  (CASE WHEN pg_class.relkind = ''p'' THEN pg_get_partkeydef(pg_class.oid) ELSE '''' END) AS partition_type,'
          '  tst.reloptions as tst_reloptions,'
          '  (select'
          '     pg_description.description'
          '   from'
          '     pg_description'
          '     inner join pg_class pg_class1 on (pg_class1.oid = pg_description.classoid)'
          '   where'
          '       pg_description.objsubid = 0'
          '     and'
          '       pg_class1.relname = ''pg_class'''
          '     and'
          '       pg_description.objoid = pg_class.oid) as description'
          'from'
          '  pg_class'
          '  LEFT OUTER JOIN pg_class tst ON tst.oid = pg_class.reltoastrelid'
          'WHERE'
          '    (pg_class.relkind in (''r'', ''p''))'
          '  and'
          '    (pg_class.relnamespace = :relnamespace)'
          '  and'
          '    (pg_class.relname  =  :relname)'
          ''
        )
      end    
      item
        Caption = 'RelationFields'
        Lines.Strings = (
          'select'
          '  pg_attribute.attnum,'
          '  cast(pg_attribute.attname as varchar(100)),'
          '  pg_attribute.atttypid,'
          '  pg_attribute.attlen,'
          '  pg_attribute.attndims,'
          '  pg_attribute.atttypmod,'
          '  pg_attribute.attbyval,'
          '  pg_attribute.attstorage,'
          '  pg_attribute.attalign,'
          '  pg_attribute.attnotnull,'
          '  pg_attribute.atthasdef,'
          '  pg_attribute.attislocal,'
          '  pg_attribute.attcollation,'
          '  (select'
          '     pg_get_expr(pg_attrdef.adbin, pg_attrdef.adrelid, true)'
          '   from'
          '     pg_attrdef'
          '   where'
          '       pg_attrdef.adrelid = pg_attribute.attrelid'
          '     and'
          '       pg_attrdef.adnum = pg_attribute.attnum) as adsrc,'
          ''
          '  pg_type_m.typname,'
          '  pg_type_m.typnamespace,'
          '  cast(pg_namespace_m.nspname as varchar(100)) as typnamespace_name,'
          '  pg_type_m.typdefault,'
          '  cast(pg_type_m.typtype as varchar(3)) as  typtype,'
          '    (select'
          '       pg_description.description'
          '     from'
          '       pg_description'
          '     where'
          '         pg_description.objoid = pg_attribute.attrelid'
          '       and'
          '         pg_description.objsubid = pg_attribute.attnum) as description,'
          '  (case'
          '     when pg_type_m.typtype = ''d'' then'
          '        (select'
          '          pg_type1.typname'
          '        from'
          '          pg_type pg_type1'
          '        where'
          '          pg_type1.oid = pg_type_m.typbasetype)'
          '     else'
          '       '''''
          '   end) as base_type,'
          '   quote_ident(type_collation.collname) as collation_name,'
          '   quote_ident(type_collation_nspc.nspname) as collation_nspn'
          'from'
          '  pg_attribute'
          '  inner join pg_type pg_type_m on (pg_attribute.atttypid = pg_type_m.oid)'
          '  inner join pg_namespace pg_namespace_m on (pg_type_m.typnamespace = pg_namespace_m.oid)'
          '  left outer join pg_collation type_collation on (pg_attribute.attcollation = type_collation.oid)'
          '  left outer join pg_namespace type_collation_nspc on (type_collation.collnamespace=type_collation_nspc.oid)'
          'where'
          '    pg_attribute.attnum >= 0'
          '  and'
          '    pg_attribute.attrelid = :attrelid'
          '  and'
          '    not pg_attribute.attisdropped'
          'order by'
          '  pg_attribute.attnum'
          ''
        )
      end>
    Left = 40
    Top = 256
  end
  object sPGTableInerited: TRxTextHolder
    Highlighter = rxSynSQL
    Items = <    
      item
        Caption = 'sTableInerited'
        Lines.Strings = (
          'select'
          '  pg_inherits.inhrelid,'
          '  pg_inherits.inhparent,'
          '  pg_inherits.inhseqno'
          'from'
          '  pg_inherits'
          'where'
          '  pg_inherits.inhparent = :inhparent'
          'order by'
          '  pg_inherits.inhseqno'
          ''
        )
      end    
      item
        Caption = 'sTableInerited10'
        Lines.Strings = (
          'select'
          '  pg_inherits.inhrelid,'
          '  pg_inherits.inhparent,'
          '  pg_inherits.inhseqno'
          'from'
          '  pg_inherits'
          '  inner join pg_class on (pg_class.oid = pg_inherits.inhrelid)'
          'where'
          '    pg_inherits.inhparent = :inhparent'
          '  and'
          '    not pg_class.relispartition'
          'order by'
          '  pg_inherits.inhseqno'
          ''
        )
      end    
      item
        Caption = 'RelationPartitions'
        Lines.Strings = (
          'select'
          '  pg_class.oid,'
          '  pg_class.relname,'
          '  pg_class.reltablespace,'
          '  pg_class.relnamespace,'
          '  (select'
          '     pg_description.description'
          '   from'
          '     pg_description'
          '     inner join pg_class pg_class1 on (pg_class1.oid = pg_description.classoid)'
          '   where'
          '       pg_description.objsubid = 0'
          '     and'
          '       pg_class1.relname = ''pg_class'''
          '     and'
          '       pg_description.objoid = pg_class.oid) as description,'
          '  pg_get_expr(pg_class.relpartbound, pg_class.oid) AS partition_value'
          'from'
          '  pg_inherits'
          '  inner join pg_class on (pg_inherits.inhrelid = pg_class.oid)'
          'where'
          '    pg_inherits.inhparent = :inhparent'
          '  and'
          '    pg_class.relispartition'
          'order by'
          '  pg_class.relname'
          ''
        )
      end>
    Left = 162
    Top = 256
  end
  object sPGIndex: TRxTextHolder
    Highlighter = rxSynSQL
    Items = <    
      item
        Caption = 'sqlIndex'
        Lines.Strings = (
          'select'
          '  cast(pg_class.oid as integer),              -- Код индекса'
          '  pg_class.relname,          -- Наименование индекса'
          '  pg_class.relam,            --'
          '  pg_class.reltablespace,    -- Табличное пространство, содержащее индекс'
          '  pg_index.indexrelid,'
          '  pg_index.indrelid,'
          '  pg_index.indnatts,'
          '  pg_index.indisunique,'
          '  pg_index.indisprimary,'
          '  pg_index.indisclustered,'
          '  pg_index.indisvalid,'
          '  pg_index.indcheckxmin,'
          '  pg_index.indisready,'
          '  pg_get_expr(pg_index.indpred, pg_index.indrelid, true) as where_exp,'
          '  cast(pg_index.indexprs as varchar) as indexprs,'
          '  pg_am.amname,'
          '  (select'
          '     pg_description.description'
          '   from'
          '     pg_description'
          '     inner join pg_class pgc1 on (pg_description.classoid = pgc1.oid)'
          '  where'
          '       pg_description.objoid = pg_class.oid'
          '     and'
          '       pg_description.objsubid = 0'
          '     and'
          '       pgc1.relname = ''pg_class'') as description'
          'from'
          '  pg_index'
          '  inner join pg_class on (pg_index.indexrelid = pg_class.oid)'
          '  inner join pg_am on (pg_class.relam = pg_am.oid)'
          'where'
          '    (pg_class.relname = :index_name)'
          '  and'
          '    (pg_class.relnamespace = :schema_id)'
          ''
        )
      end    
      item
        Caption = 'sqlIndexFields'
        Lines.Strings = (
          'select'
          '  pg_attribute.attname,'
          '  pg_attribute.attnum,'
          '  pg_type.typname,'
          '  pg_attribute.atttypmod-4 as len,'
          '  pg_attribute.attnotnull,'
          '  pg_attribute.atthasdef,'
          '  cast(pg_attribute.attstorage as varchar(5)) as attstorage,'
          '  cast(pg_get_expr(pg_attrdef.adbin, pg_attribute.attrelid, true) as varchar(100))as defval,'
          '  pg_attribute.attndims as dimnum,'
          '  pg_attribute.attstattarget,'
          '  pg_attribute.attislocal,'
          '  pg_attribute.attinhcount,'
          '  pg_namespace.nspname,'
          '  pg_get_indexdef(pg_index.indexrelid, pg_attribute.attnum, true) as coldef,'
          '  pg_index.indkey[pg_attribute.attnum] as indkey,'
          '  pg_index.indclass[pg_attribute.attnum] as indclass,'
          '  pg_index.indoption[pg_attribute.attnum] as indoption,'
          ''
          '  coll.collname as coll_name,'
          '  coll_ns.nspname as coll_nspname,'
          '  (select'
          '     pg_description.description'
          '   from'
          '     pg_description'
          '   where'
          '       (pg_description.objoid = pg_class.oid)'
          '     and'
          '       (pg_description.objsubid = pg_attribute.attnum)) as description'
          'from'
          '  pg_attribute'
          '  inner join pg_class on pg_attribute.attrelid = pg_class.oid'
          '  inner join pg_type on pg_attribute.atttypid = pg_type.oid'
          '  inner join pg_index on (pg_index.indexrelid = pg_class.oid)'
          '  inner join pg_namespace on pg_type.typnamespace = pg_namespace.oid'
          '  left outer join pg_attrdef on ((pg_attrdef.adrelid = pg_class.oid) and (pg_attrdef.adnum = pg_attribute.attnum))'
          '  left outer join pg_collation coll on (pg_attribute.attcollation=coll.oid)'
          '  left outer join pg_namespace coll_ns on (coll.collnamespace=coll_ns.oid)'
          'where'
          '    pg_attribute.attnum > 0'
          '  and'
          '    pg_attribute.attisdropped <> ''t'''
          '  and'
          '    pg_class.oid = :indexrelid'
          'order by'
          '   pg_attribute.attnum'
          ''
          ''
        )
      end    
      item
        Caption = 'sqlIndexFields_11'
        Lines.Strings = (
          'select'
          '  pg_index.indnatts,'
          '  pg_index.indnkeyatts,'
          '  pg_attribute.attname,'
          '  pg_attribute.attnum,'
          '  pg_type.typname,'
          '  pg_attribute.atttypmod-4 as len,'
          '  pg_attribute.attnotnull,'
          '  pg_attribute.atthasdef,'
          '  cast(pg_attribute.attstorage as varchar(5)) as attstorage,'
          '  cast(pg_get_expr(pg_attrdef.adbin, pg_attribute.attrelid, true) as varchar(100))as defval,'
          '  pg_attribute.attndims as dimnum,'
          '  pg_attribute.attstattarget,'
          '  pg_attribute.attislocal,'
          '  pg_attribute.attinhcount,'
          '  pg_namespace.nspname,'
          '  pg_get_indexdef(pg_index.indexrelid, pg_attribute.attnum, true) as coldef,'
          '  pg_index.indkey[pg_attribute.attnum] as indkey,'
          '  pg_index.indclass[pg_attribute.attnum] as indclass,'
          '  pg_index.indoption[pg_attribute.attnum] as indoption,'
          ''
          '  coll.collname as coll_name,'
          '  coll_ns.nspname as coll_nspname,'
          '  (select'
          '     pg_description.description'
          '   from'
          '     pg_description'
          '   where'
          '       (pg_description.objoid = pg_class.oid)'
          '     and'
          '       (pg_description.objsubid = pg_attribute.attnum)) as description'
          'from'
          '  pg_attribute'
          '  inner join pg_class on pg_attribute.attrelid = pg_class.oid'
          '  inner join pg_type on pg_attribute.atttypid = pg_type.oid'
          '  inner join pg_index on (pg_index.indexrelid = pg_class.oid)'
          '  inner join pg_namespace on pg_type.typnamespace = pg_namespace.oid'
          '  left outer join pg_attrdef on ((pg_attrdef.adrelid = pg_class.oid) and (pg_attrdef.adnum = pg_attribute.attnum))'
          '  left outer join pg_collation coll on (pg_attribute.attcollation=coll.oid)'
          '  left outer join pg_namespace coll_ns on (coll.collnamespace=coll_ns.oid)'
          'where'
          '    pg_attribute.attnum > 0'
          '  and'
          '    pg_attribute.attisdropped <> ''t'''
          '  and'
          '    pg_class.oid = :indexrelid'
          'order by'
          '   pg_attribute.attnum'
          ''
          ''
        )
      end    
      item
        Caption = 'sqlIndexTable'
        Lines.Strings = (
          'select'
          '  cast(pg_class.oid as integer),              -- Код индекса'
          '  pg_class.relname,          -- Наименование индекса'
          '  pg_class.reltablespace,    -- Табличное пространство, содержащее индекс'
          '  pg_index.*'
          '--  pg_index.indisunique      -- Признак уникальности индекса'
          '--  pg_class.relam,            --'
          '--  pg_index.indexrelid,       -- Код индекса (pg_class.oid)'
          '--  pg_index.indrelid,         -- Код таблицы, к которой относится индекс'
          '--  pg_index.indnatts,         -- Кол-во полей, используемых для построения индекса'
          '--  pg_index.indisprimary,     -- Признак того, что индекс является превичным ключем таблицы'
          '--  pg_index.indisclustered,   -- Признак кластерного индекса'
          '--  pg_index.indisvalid,'
          '--  pg_index.indcheckxmin,'
          '--  pg_index.indisready,'
          '--  pg_index.indexprs,         -- Строка выражения индекса'
          '--  pg_index.indpred'
          'from'
          '  pg_class'
          '  inner join pg_index on (pg_index.indexrelid = pg_class.oid)'
          'where'
          '    pg_class.relkind = ''i'''
          '  and'
          '    pg_index.indrelid =  :indrelid'
          'order by'
          '  pg_class.relname'
          ''
        )
      end>
    Left = 37
    Top = 184
  end
  object sqlFts: TRxTextHolder
    Highlighter = rxSynSQL
    Items = <    
      item
        Caption = 'pgFTsParsers'
        Lines.Strings = (
          'select'
          '  cast(pg_ts_parser.oid as integer),'
          '  cast(pg_ts_parser.prsnamespace as integer),'
          '  pg_ts_parser.prsname,'
          '  cast(pg_ts_parser.oid as integer),'
          '  pg_ts_parser.prslextype as data,'
          '  (select'
          '     pg_description.description'
          '   from'
          '     pg_description inner join pg_class on pg_class.oid=pg_description.classoid'
          '   where'
          '     pg_description.objoid = pg_ts_parser.oid and pg_description.objsubid = 0 and pg_class.relname = ''pg_ts_parser'') as description'
          'from'
          '  pg_ts_parser'
          'order by'
          '  pg_ts_parser.prsname'
          ''
          ''
        )
      end    
      item
        Caption = 'pgFTsParsersList'
        Lines.Strings = (
          'select'
          '  case when substring(pg_namespace.nspname from 1 for 3) = ''pg_'' then '''' else pg_namespace.nspname ||''.'' end ||'
          '  pg_ts_parser.prsname as prsname'
          'from'
          '  pg_ts_parser'
          '  inner join pg_namespace on (pg_namespace.oid = pg_ts_parser.prsnamespace)'
          'order by'
          '  pg_ts_parser.prsname'
          ''
          ''
        )
      end    
      item
        Caption = 'pgFtsConfigs'
        Lines.Strings = (
          'select'
          '  cast(pg_ts_config.oid as integer),'
          '  cast(pg_ts_config.cfgnamespace as integer),'
          '  pg_ts_config.cfgname,'
          '  pg_ts_config.cfgnamespace,'
          '  pg_ts_config.cfgname as data,'
          '  (select'
          '     pg_description.description'
          '   from'
          '     pg_description inner join pg_class on pg_class.oid=pg_description.classoid'
          '   where'
          '     pg_description.objoid = pg_ts_config.oid and pg_description.objsubid = 0 and pg_class.relname = ''pg_ts_config'') as description'
          'from'
          '  pg_ts_config'
          'order by'
          '  pg_ts_config.cfgname'
          ''
          ''
        )
      end    
      item
        Caption = 'pgFtsConfig'
        Lines.Strings = (
          'select'
          '  pg_ts_config.oid,'
          '  pg_ts_config.cfgname,'
          '  pg_ts_config.cfgnamespace,'
          '  pg_ts_config.cfgowner,'
          '  pg_ts_config.cfgparser,'
          '  pg_ts_parser.prsname,'
          '  (select'
          '     pg_description.description'
          '   from'
          '     pg_description inner join pg_class on pg_class.oid=pg_description.classoid'
          '   where'
          '     pg_description.objoid = pg_ts_config.oid and pg_description.objsubid = 0 and pg_class.relname = ''pg_ts_config'') as description'
          'from'
          '  pg_ts_config'
          '  inner join pg_ts_parser on (pg_ts_config.cfgparser = pg_ts_parser.oid)'
          'where'
          '    pg_ts_config.cfgnamespace = :namespace'
          '  and'
          '    pg_ts_config.oid = :oid'
          ''
        )
      end    
      item
        Caption = 'pgFtsDicts'
        Lines.Strings = (
          'select'
          '  cast(pg_ts_dict.oid as integer),'
          '  cast(pg_ts_dict.dictnamespace as integer),'
          '  pg_ts_dict.dictname,'
          '  pg_ts_dict.dictowner,'
          '  pg_ts_dict.dictinitoption as data,'
          '  (select'
          '     pg_description.description'
          '   from'
          '     pg_description inner join pg_class on pg_class.oid=pg_description.classoid'
          '   where'
          '     pg_description.objoid = pg_ts_dict.oid and pg_description.objsubid = 0 and pg_class.relname = ''pg_ts_dict'') as description'
          'from'
          '  pg_ts_dict'
          'order by'
          '  pg_ts_dict.dictname'
          ''
          ''
          ''
        )
      end    
      item
        Caption = 'pgFtsTempl'
        Lines.Strings = (
          'select'
          '  cast(pg_ts_template.oid as integer),'
          '  cast(pg_ts_template.tmplnamespace as integer),'
          '  pg_ts_template.tmplname,'
          '  pg_ts_template.tmplinit,'
          '  pg_ts_template.tmpllexize as data,'
          ''
          '  (select'
          '     pg_description.description'
          '   from'
          '     pg_description inner join pg_class on pg_class.oid=pg_description.classoid'
          '   where'
          '     pg_description.objoid = pg_ts_template.oid and pg_description.objsubid = 0 and pg_class.relname = ''pg_ts_template'') as description'
          ''
          'from'
          '  pg_ts_template'
          'order by'
          '  pg_ts_template.tmplname'
          ''
          ''
        )
      end>
    Left = 32
    Top = 680
  end
  object sPgConstraints: TRxTextHolder
    Highlighter = rxSynSQL
    Items = <    
      item
        Caption = 'sqlPgConstFK'
        Lines.Strings = (
          'select'
          '  pg_constraint.conname,'
          '  cast(pg_constraint.conkey as varchar(100)) as conkey,'
          '  cast(pg_constraint.confkey as varchar(100)) as confkey,'
          '  pg_constraint.confrelid,'
          '  pg_constraint.confupdtype,'
          '  pg_constraint.confdeltype,'
          '  pg_constraint.conindid,'
          '  ind_class.relname as index_name,'
          '  cast((case'
          '    when pg_constraint.confupdtype = ''c'' then ''CASCADE'''
          '    when pg_constraint.confupdtype = ''a'' then ''NONE'''
          '    when pg_constraint.confupdtype = ''n'' then ''SET NULL'''
          '    when pg_constraint.confupdtype = ''d'' then ''SET DEFAULT'''
          '  else'
          '    ''ERROR'''
          '  end) as varchar(15)) as UPD_RULE,'
          '  cast((case'
          '    when pg_constraint.confdeltype = ''c'' then ''CASCADE'''
          '    when pg_constraint.confdeltype = ''a'' then ''NONE'''
          '    when pg_constraint.confdeltype = ''n'' then ''SET NULL'''
          '    when pg_constraint.confdeltype = ''d'' then ''SET DEFAULT'''
          '  else'
          '    ''ERROR'''
          '  end) as varchar(15)) as DEL_RULE,'
          '  (select'
          '     pg_description.description'
          '   from'
          '     pg_description'
          '     inner join pg_class pgc1 on (pg_description.classoid = pgc1.oid)'
          '  where'
          '       pg_description.objoid = pg_constraint.oid'
          '     and'
          '       pg_description.objsubid = 0'
          '     and'
          '       pgc1.relname = ''pg_class'') as description'
          'from'
          '  pg_constraint'
          '  left join pg_class ind_class on (ind_class.oid = pg_constraint.conindid)'
          'where'
          '    pg_constraint.contype = ''f'''
          '  and'
          '    pg_constraint.conrelid = :conrelid'
          'order by'
          '  pg_constraint.conname'
          ''
          ''
          ''
        )
      end    
      item
        Caption = 'sqlPgConstPK'
        Lines.Strings = (
          'select'
          '  pg_constraint.conname,'
          '  cast(pg_constraint.conkey as varchar(100)) as conkey,'
          '  (select'
          '     pg_description.description'
          '   from'
          '     pg_description'
          '     inner join pg_class pgc1 on (pg_description.classoid = pgc1.oid)'
          '  where'
          '       pg_description.objoid = pg_constraint.oid'
          '     and'
          '       pg_description.objsubid = 0'
          '     and'
          '       pgc1.relname = ''pg_class'') as description'
          ''
          'from'
          '  pg_constraint'
          'where'
          '    cast(pg_constraint.contype as varchar(10)) = ''p'''
          '  and'
          '    pg_constraint.conrelid = :conrelid'
          ''
        )
      end    
      item
        Caption = 'sqlPgConstUNQ'
        Lines.Strings = (
          'select'
          '  pg_constraint.conname,'
          '  cast(pg_constraint.conkey as varchar(100)) as conkey,'
          '  (select'
          '     pg_description.description'
          '   from'
          '     pg_description'
          '   where'
          '     pg_description.objoid = pg_constraint.oid and pg_description.objsubid = 0) as description'
          'from'
          '  pg_constraint'
          'where'
          '    pg_constraint.conrelid = :conrelid'
          '  and'
          '    pg_constraint.contype = ''u'''
          'order by'
          '  pg_constraint.conname'
          ''
        )
      end    
      item
        Caption = 'sqlTableConstraint'
        Lines.Strings = (
          'select'
          '  pg_constraint.conname,'
          '  pg_get_constraintdef(pg_constraint.oid) as consrc,'
          '  cast(pg_constraint.conkey as varchar(100)) as conkey,'
          '  (select'
          '     pg_description.description'
          '   from'
          '     pg_description'
          '     inner join pg_class pgc1 on (pg_description.classoid = pgc1.oid)'
          '  where'
          '       pg_description.objoid = pg_constraint.oid'
          '     and'
          '       pg_description.objsubid = 0'
          '     and'
          '       pgc1.relname = ''pg_class'') as description'
          'from'
          '  pg_constraint'
          'where'
          '    pg_constraint.conrelid = :conrelid'
          '  and'
          '    pg_constraint.contype  = ''c'''
          'order by'
          '  pg_constraint.conname'
          ''
        )
      end>
    Left = 224
    Top = 256
  end
  object sPGView: TRxTextHolder
    Highlighter = rxSynSQL
    Items = <    
      item
        Caption = 'sql_PG_ViewRefresh'
        Lines.Strings = (
          'SELECT'
          '  cast(pg_class.oid as integer),'
          '  pg_class.reltablespace,'
          '  pg_class.relname AS viewname,'
          '  pg_class.reloptions,'
          '  pg_get_viewdef(pg_class.oid, true) AS definition,'
          '  tst.reloptions as tst_reloptions,'
          '  pg_class.relhasoids,'
          '  pg_class.reltoastrelid,'
          '  pg_class.relacl,'
          '  pg_class.relowner,'
          '  (select'
          '     pg_description.description'
          '   from'
          '     pg_description'
          '     inner join pg_class pg_class1 on (pg_class1.oid = pg_description.classoid)'
          '   where'
          '       pg_description.objsubid = 0'
          '     and'
          '       pg_class1.relname = ''pg_class'''
          '     and'
          '       pg_description.objoid = pg_class.oid) as description'
          'FROM'
          '  pg_class'
          '  LEFT OUTER JOIN pg_class tst ON tst.oid = pg_class.reltoastrelid'
          'WHERE'
          '    (pg_class.relkind = :relkind)'
          '  and'
          '    (pg_class.relnamespace = :relnamespace)'
          '  and'
          '    (pg_class.relname  = :relname)'
          ''
        )
      end    
      item
        Caption = 'sql_PG_ViewRefresh_12'
        Lines.Strings = (
          'SELECT'
          '  cast(pg_class.oid as integer),'
          '  pg_class.reltablespace,'
          '  pg_class.relname AS viewname,'
          '  pg_class.reloptions,'
          '  pg_get_viewdef(pg_class.oid, true) AS definition,'
          '  tst.reloptions as tst_reloptions,'
          '  pg_class.reltoastrelid,'
          '  pg_class.relacl,'
          '  pg_class.relowner,'
          '  (select'
          '     pg_description.description'
          '   from'
          '     pg_description'
          '     inner join pg_class pg_class1 on (pg_class1.oid = pg_description.classoid)'
          '   where'
          '       pg_description.objsubid = 0'
          '     and'
          '       pg_class1.relname = ''pg_class'''
          '     and'
          '       pg_description.objoid = pg_class.oid) as description'
          'FROM'
          '  pg_class'
          '  LEFT OUTER JOIN pg_class tst ON tst.oid = pg_class.reltoastrelid'
          'WHERE'
          '    (pg_class.relkind = :relkind)'
          '  and'
          '    (pg_class.relnamespace = :relnamespace)'
          '  and'
          '    (pg_class.relname  = :relname)'
          ''
        )
      end>
    Left = 505
    Top = 256
  end
  object sqlTasks: TRxTextHolder
    Highlighter = rxSynSQL
    Items = <    
      item
        Caption = 'pgTaskSheduleList'
        Lines.Strings = (
          'select'
          '  pga_schedule.jscid,'
          '  pga_schedule.jscname,'
          '  pga_schedule.jscdesc,'
          '  pga_schedule.jscenabled,'
          '  pga_schedule.jscstart,'
          '  pga_schedule.jscend,'
          '  cast(pga_schedule.jscminutes as varchar(500)) as jscminutes,'
          '  cast(pga_schedule.jschours as varchar(500)) as jschours,'
          '  cast(pga_schedule.jscweekdays as varchar(500)) as jscweekdays,'
          '  cast(pga_schedule.jscmonthdays as varchar(500)) as jscmonthdays,'
          '  cast(pga_schedule.jscmonths as varchar(500)) as jscmonths'
          'from'
          '  pgagent.pga_schedule'
          'where'
          '  pga_schedule.jscjobid = :jscjobid'
          'order by'
          '  pga_schedule.jscid'
          ''
        )
      end    
      item
        Caption = 'pgTaskStepList'
        Lines.Strings = (
          'select'
          '  pga_jobstep.jstid,'
          '  pga_jobstep.jstname,'
          '  pga_jobstep.jstdesc,'
          '  pga_jobstep.jstenabled,'
          '  pga_jobstep.jstkind,'
          '  pga_jobstep.jstcode,'
          '  pga_jobstep.jstconnstr,'
          '  pga_jobstep.jstdbname,'
          '  pga_jobstep.jstonerror,'
          '  pga_jobstep.jscnextrun'
          'from'
          '  pgagent.pga_jobstep'
          'where'
          '  pga_jobstep.jstjobid = :jstjobid'
          'order by'
          '  pga_jobstep.jstname'
          ''
        )
      end    
      item
        Caption = 'pgTasksSchema'
        Lines.Strings = (
          'select'
          '  *'
          'from'
          '  pg_namespace'
          'where'
          '  pg_namespace.nspname = ''pgagent'''
          ''
        )
      end    
      item
        Caption = 'pgTaskClassList'
        Lines.Strings = (
          'select'
          '  pga_jobclass.jclid,'
          '  pga_jobclass.jclname'
          'from'
          '  pgagent.pga_jobclass'
          'order by'
          '  pga_jobclass.jclid'
          ''
        )
      end    
      item
        Caption = 'pgTasksJobData'
        Lines.Strings = (
          'select'
          '  pga_job.jobid,'
          '  pga_job.jobjclid,'
          '  pga_job.jobname,'
          '  pga_job.jobdesc,'
          '  pga_job.jobhostagent,'
          '  pga_job.jobenabled,'
          '  pga_job.jobcreated,'
          '  pga_job.jobchanged,'
          '  pga_job.jobagentid,'
          '  pga_job.jobnextrun,'
          '  pga_job.joblastrun'
          'from'
          '  pgagent.pga_job'
          'where'
          '/*    pga_job.jobid = :jobid'
          '  or */'
          '    pga_job.jobname = :jobname'
        )
      end    
      item
        Caption = 'pgDBList'
        Lines.Strings = (
          'select'
          '  pg_database.datname'
          'from'
          '  pg_database'
          'where'
          '  not pg_database.datname like ''template%'''
          'order by'
          '  pg_database.datname'
          ''
        )
      end    
      item
        Caption = 'sPGTasks'
        Lines.Strings = (
          'select'
          '  pga_job.jobid,'
          '  pga_job.jobjclid,'
          '  pga_job.jobname,'
          '  pga_job.jobdesc,'
          '  pga_job.jobhostagent,'
          '  pga_job.jobenabled,'
          '  pga_job.jobcreated,'
          '  pga_job.jobchanged,'
          '  pga_job.jobagentid,'
          '  pga_job.jobnextrun,'
          '  pga_job.joblastrun'
          'from'
          '  pgagent.pga_job'
          'order by'
          '  pga_job.jobname'
          ''
        )
      end    
      item
        Caption = 'sTasksAll'
        Lines.Strings = (
          'select'
          '  cast(pga_job.jobid as integer),'
          '  cast(pga_job.jobid as integer),'
          '  pga_job.jobname,'
          '  pga_job.jobdesc as description'
          'from'
          '  pgagent.pga_job'
          'order by'
          '  pga_job.jobname'
        )
      end>
    Left = 32
    Top = 464
  end
  object sqlSchema: TRxTextHolder
    Highlighter = rxSynSQL
    Items = <    
      item
        Caption = 'sqlSchema'
        Lines.Strings = (
          'select'
          '  cast(pg_namespace.oid as integer),'
          '  pg_namespace.nspname,'
          '  pg_namespace.nspowner,'
          '  pg_user.usename ,'
          '  pg_namespace.nspacl as acl_list,'
          '  (select'
          '     pg_description.description'
          '   from'
          '     pg_description'
          '     inner join pg_class on pg_class.oid=pg_description.classoid'
          '   where'
          '     pg_description.objoid = pg_namespace.oid and pg_description.objsubid = 0 and pg_class.relname = ''pg_namespace'') as description'
          'from'
          '  pg_namespace'
          '  inner join pg_user on (pg_namespace.nspowner = pg_user.usesysid)'
          'where'
          '  pg_namespace.nspname = :nspname'
          ''
          ''
        )
      end    
      item
        Caption = 'sqlSchemasAll'
        Lines.Strings = (
          'select'
          '  cast(pg_namespace.oid as integer),'
          '  cast(pg_namespace.oid as integer),'
          '  pg_namespace.nspname,'
          '  pg_namespace.nspowner,'
          '  pg_user.usename as data,'
          '  pg_namespace.nspacl as acl_list,'
          '  (select'
          '     pg_description.description'
          '   from'
          '     pg_description inner join pg_class on pg_class.oid=pg_description.classoid'
          '   where'
          '     pg_description.objoid = pg_namespace.oid and pg_description.objsubid = 0 and pg_class.relname = ''pg_namespace'') as description'
          'from'
          '  pg_namespace'
          '  left join pg_user on (pg_namespace.nspowner = pg_user.usesysid)'
          'order by'
          '  pg_namespace.nspname'
          ''
          ''
        )
      end>
    Left = 32
    Top = 528
  end
  object sRoleAndUser: TRxTextHolder
    Highlighter = rxSynSQL
    Items = <    
      item
        Caption = 'sPGUsers'
        Lines.Strings = (
          'select'
          '  pg_user.usesysid,'
          '  pg_user.usesysid,'
          '  pg_user.usename,'
          ' (select'
          '     pg_description.description'
          '   from'
          '     pg_description'
          '   where'
          '       pg_description.objoid = pg_user.usesysid and pg_description.objsubid = 0) as description'
          'from'
          '  pg_user'
          'order by'
          '  pg_user.usename'
          ''
        )
      end    
      item
        Caption = 'sPGGroups'
        Lines.Strings = (
          'select'
          '  pg_group.grosysid,'
          '  pg_group.grosysid,'
          '  pg_group.groname,'
          '  (select'
          '     pg_description.description'
          '   from'
          '     pg_description'
          '   where'
          '     pg_description.objoid = pg_group.grosysid and pg_description.objsubid = 0) as description'
          'from'
          '  pg_group'
          'order by'
          '  pg_group.groname'
          ''
        )
      end    
      item
        Caption = 'sPGGroups1'
        Lines.Strings = (
          'select'
          '  pg_group.grosysid,'
          '  pg_group.grosysid,'
          '  pg_group.groname,'
          '  pg_group.grolist,'
          '  (select'
          '     pg_description.description'
          '   from'
          '     pg_description'
          '   where'
          '     pg_description.objoid = pg_group.grosysid and pg_description.objsubid = 0) as description'
          'from'
          '  pg_group'
          'where'
          '  pg_group.groname = :groname'
          ''
        )
      end    
      item
        Caption = 'sPGRoleParams'
        Lines.Strings = (
          'select'
          '  pg_authid.*,'
          '  pg_authid.rolvaliduntil = ''infinity'' as validuntilinfinity,'
          '  (select'
          '     pg_shdescription.description'
          '  from'
          '    pg_shdescription'
          '  where'
          '    pg_shdescription.objoid = pg_authid.oid)  as description'
          'from'
          '  pg_authid'
          'where'
          '  (pg_authid.rolname = :rolname)'
          ''
        )
      end    
      item
        Caption = 'sqlPGUserGroupGrants'
        Lines.Strings = (
          'select'
          '  pg_auth_members.admin_option,'
          '  pg_auth_members.grantor,'
          '  pg_user_grantor.usename as user_grantor,'
          '  pg_user_test.usename as user_member'
          'from'
          '  pg_auth_members'
          '  inner join pg_user pg_user_grantor on (pg_user_grantor.usesysid = pg_auth_members.grantor)'
          '  inner join pg_user pg_user_test on (pg_user_test.usesysid = pg_auth_members.member)'
          'where'
          '--  pg_auth_members.roleid =  139926 -- :roleid'
          '  pg_auth_members.roleid =  :roleid'
          ''
        )
      end>
    Left = 728
    Top = 32
  end
  object sExtensions: TRxTextHolder
    Highlighter = rxSynSQL
    Items = <    
      item
        Caption = 'pgExtensions'
        Lines.Strings = (
          'select'
          '  cast(pg_extension.oid as integer),'
          '  cast(pg_extension.extnamespace as integer),'
          '  pg_extension.extname,'
          '  pg_extension.extnamespace,'
          '  pg_extension.extversion as data,'
          '  (select'
          '     pg_description.description'
          '   from'
          '     pg_description inner join pg_class on pg_class.oid=pg_description.classoid'
          '   where'
          '     pg_description.objoid = pg_extension.oid and pg_description.objsubid = 0 and pg_class.relname = ''pg_extension'') as description'
          'from'
          '  pg_extension'
          ''
        )
      end    
      item
        Caption = 'pgExtension'
        Lines.Strings = (
          'select'
          '  pg_extension.*,'
          '  (select'
          '     pg_description.description'
          '   from'
          '     pg_description inner join pg_class on pg_class.oid=pg_description.classoid'
          '   where'
          '     pg_description.objoid = pg_extension.oid and pg_description.objsubid = 0 and pg_class.relname = ''pg_extension'') as description'
          'from'
          '  pg_extension'
          'where'
          '  pg_extension.oid = :oid'
          ''
        )
      end>
    Left = 432
    Top = 336
  end
  object sTriggers: TRxTextHolder
    Highlighter = rxSynSQL
    Items = <    
      item
        Caption = 'sqlTrigger'
        Lines.Strings = (
          'select'
          '  cast(pg_trigger.oid as integer),'
          '  pg_trigger.tgname,'
          '  pg_trigger.tgrelid,'
          '  pg_trigger.tgtype,'
          '  cast(pg_trigger.tgenabled as varchar(1)) as tgenabled,'
          '  pg_trigger.tgdeferrable,'
          '  pg_trigger.tgnargs,'
          '  cast(pg_trigger.tgattr as varchar) tgattr,'
          '  pg_trigger.tgfoid,'
          '  pg_get_triggerdef(pg_trigger.oid) as s_tg_def,'
          '  (select'
          '     pg_description.description'
          '   from'
          '     pg_description inner join pg_class on (pg_class.oid = pg_description.classoid)'
          '   where'
          '     pg_description.objoid = pg_trigger.oid and pg_class.relname = ''pg_trigger'' and pg_description.objsubid = 0) as description'
          ''
          'from'
          '  pg_trigger'
          '  inner join pg_class on (pg_trigger.tgrelid = pg_class.oid)'
          'where'
          '    (pg_trigger.tgname = :tgname)'
          '  and'
          '    (pg_class.relnamespace = :relnamespace)'
          ''
        )
      end    
      item
        Caption = 'sPGTriggerList9_4'
        Lines.Strings = (
          'select'
          '  cast(pg_trigger.oid as integer),'
          '  pg_class.relnamespace,'
          '  pg_trigger.tgname,'
          '  pg_class.relname,'
          '  cast(pg_trigger.tgfoid as integer) as own_data,'
          '  pg_trigger.tgtype,'
          '  pg_trigger.tgenabled,'
          '  (select'
          '     pg_description.description'
          '   from'
          '     pg_description inner join pg_class on (pg_class.oid = pg_description.classoid)'
          '   where'
          '     pg_description.objoid = pg_trigger.oid and pg_class.relname = ''pg_trigger'' and pg_description.objsubid = 0) as description'
          'from'
          '  pg_trigger'
          '  inner join pg_class on (pg_trigger.tgrelid = pg_class.oid)'
          'where'
          '  pg_trigger.tgconstrrelid = 0'
          'order by'
          '  pg_trigger.tgname'
          ''
        )
      end    
      item
        Caption = 'sPGTriggerList8_0'
        Lines.Strings = (
          'select'
          '  cast(pg_trigger.oid as integer),'
          '  pg_class.relnamespace,'
          '  pg_trigger.tgname,'
          '  pg_class.relname,'
          '  cast(pg_trigger.tgfoid as integer) as own_data,'
          '  pg_trigger.tgtype,'
          '  pg_trigger.tgenabled,'
          '  (select'
          '     pg_description.description'
          '   from'
          '     pg_description'
          '   where'
          '     pg_description.objoid = pg_trigger.oid and pg_description.objsubid = 0) as description'
          'from'
          '  pg_trigger'
          '  inner join pg_class on (pg_trigger.tgrelid = pg_class.oid)'
          'where'
          '  not pg_trigger.tgisconstraint'
          'order by'
          '  pg_trigger.tgname'
          ''
        )
      end    
      item
        Caption = 'sqlEventTriggers'
        Lines.Strings = (
          'select'
          '  pg_event_trigger.oid,'
          '  pg_event_trigger.oid,'
          '  pg_event_trigger.evtname,'
          '  (select'
          '     pg_description.description'
          '   from'
          '     pg_description'
          '   where'
          '     pg_description.objoid = pg_event_trigger.oid and pg_description.objsubid = 0) as description'
          'from'
          '  pg_event_trigger'
          'order by'
          '  pg_event_trigger.evtname'
          ''
        )
      end    
      item
        Caption = 'sqlEventTrigger'
        Lines.Strings = (
          'select'
          '  pg_event_trigger.oid,'
          '  pg_event_trigger.*,'
          '  (select'
          '     pg_description.description'
          '   from'
          '     pg_description'
          '   where'
          '     pg_description.objoid = pg_event_trigger.oid and pg_description.objsubid = 0) as description'
          'from'
          '  pg_event_trigger'
          'where'
          '  pg_event_trigger.evtname = :evtname'
          ''
        )
      end>
    Left = 136
    Top = 104
  end
  object sDomains: TRxTextHolder
    Highlighter = rxSynSQL
    Items = <    
      item
        Caption = 'sql_PG_DomainRefresh'
        Lines.Strings = (
          'select'
          '  cast(pg_type.oid as integer),'
          '  pg_type.typname,'
          '  pg_type.typlen,'
          '  pg_type.typelem,'
          '  pg_type.typdelim,'
          '  pg_type.typnotnull,'
          '  pg_type.typtypmod,'
          '  pg_type.typbasetype,'
          '  pg_type.typdefault,'
          '  (select'
          '     pg_type_base.typname'
          '   from'
          '     pg_type pg_type_base'
          '   where'
          '     pg_type_base.oid = pg_type.typbasetype) as base_type_name,'
          '  (select'
          '     pg_description.description'
          '   from'
          '     pg_description'
          '     inner join pg_class on (pg_class.oid = pg_description.classoid)'
          '   where'
          '     pg_description.objoid = pg_type.oid and pg_description.objsubid = 0 and pg_class.relname = ''pg_type'') as description,'
          '   pg_user.usename as own_user_name,'
          '   pg_constraint.conname,'
          '   pg_get_constraintdef(pg_constraint.oid) as consrc'
          'from'
          '  pg_type'
          '  inner join pg_namespace on (pg_type.typnamespace = pg_namespace.oid)'
          '  inner join pg_user on (pg_user.usesysid = pg_type.typowner)'
          '  left join pg_constraint on (pg_constraint.contypid = pg_type.oid)'
          'where'
          '    cast(pg_type.typtype as varchar(3)) = ''d'''
          '  and'
          '    pg_type.typname = :typname'
          '  and'
          '    pg_namespace.nspname = :nspname'
          ''
        )
      end    
      item
        Caption = 'sqlTypesList'
        Lines.Strings = (
          'select'
          '  cast(pg_type.oid as integer) as oid,'
          '  pg_type.*'
          '/*  cast(pg_type.typtype as varchar(1)),'
          '  cast(pg_type.oid as integer),'
          '  pg_type.typname,'
          '  pg_type.typnamespace,'
          '  pg_type.typowner,'
          '  pg_type.typlen,'
          '  pg_type.typbyval,'
          '  pg_type.typcategory,'
          '  pg_type.typispreferred,'
          '  pg_type.typisdefined,'
          '  pg_type.typdelim,'
          '  pg_type.typrelid,'
          '  pg_type.typelem,'
          '  pg_type.typarray,'
          '  pg_type.typinput,'
          '  pg_type.typoutput,'
          '  pg_type.typreceive,'
          '  pg_type.typsend,'
          '  pg_type.typmodin,'
          '  pg_type.typmodout,'
          '  pg_type.typanalyze,'
          '  pg_type.typalign,'
          '  pg_type.typstorage,'
          '  pg_type.typnotnull,'
          '  pg_type.typbasetype,'
          '  pg_type.typtypmod,'
          '  pg_type.typndims,'
          '  pg_type.typdefaultbin,'
          '  pg_type.typdefault */'
          'from'
          '  pg_type'
          '/*'
          'where'
          '    pg_type.typtype in (''b'', ''p'')'
          '  and'
          '    pg_type.typelem = 0'
          '*/'
          ''
        )
      end    
      item
        Caption = 'sql_PG_TypesListAll'
        Lines.Strings = (
          'select'
          '  cast(pg_type.oid as integer),'
          '  pg_type.typnamespace,'
          '  pg_type.typname,'
          '  cast(pg_type.typtype as varchar(3)) as typtype,'
          '  pg_type.typowner,'
          '  pg_type.typlen,'
          '  pg_type.typbyval,'
          '  pg_type.typtype,'
          '  pg_type.typnotnull,'
          '  pg_type.typbasetype,'
          '  (select'
          '     pg_type_base.typname'
          '   from'
          '     pg_type pg_type_base'
          '   where'
          '     pg_type_base.oid = pg_type.typbasetype) as base_type_name,'
          '  (select'
          '     pg_description.description'
          '     --count(*)'
          '   from'
          '     pg_description'
          '     inner join pg_class on (pg_class.oid = pg_description.classoid)'
          '   where'
          '     pg_description.objoid = pg_type.oid and pg_description.objsubid = 0 and pg_class.relname = ''pg_type'') as description'
          'from'
          '  pg_type'
          'order by'
          '  pg_type.typname'
          ''
        )
      end>
    Left = 37
    Top = 36
  end
end
