object UserDBModule: TUserDBModule
  OnCreate = DataModuleCreate
  OnDestroy = DataModuleDestroy
  OldCreateOrder = False
  Height = 608
  HorizontalOffset = 318
  VerticalOffset = 129
  Width = 906
  object UserDB: TZConnection
    ControlsCodePage = cCP_UTF8
    AutoEncodeStrings = False
    ClientCodepage = 'UTF-8'
    Properties.Strings = (
      'AutoEncodeStrings='
      'codepage=UTF-8'
      'RawStringEncoding=DB_CP'
    )
    DesignConnection = True
    Port = 0
    Database = '/home/work/FBManager/sql/fbm_meta_base.db'
    Protocol = 'sqlite-3'
    Left = 40
    Top = 14
  end
  object InitDB: TZSQLProcessor
    Params = <>
    Script.Strings = (
      'PRAGMA foreign_keys=OFF;'
      'BEGIN TRANSACTION;'
      'CREATE TABLE db_folders( '
      '  /* Таблица содержит список папок с зарегистрированными БД */'
      '  db_folders_id INTEGER PRIMARY KEY AUTOINCREMENT /* Первичный ключ */, '
      '  db_folders_code INTEGER /* Порядок сортировки */, '
      '  db_folders_name VARCHAR(100) /* Наименование папки БД*/,'
      '  db_folders_desc BLOB /* описание папки */, '
      '  db_folders_expanded BOOLEAN /* Признак распахнутости папки */'
      ');'
      'CREATE TABLE db_database('
      '/* Список всех зарегистрированных БД */'
      '  db_database_id INTEGER PRIMARY KEY AUTOINCREMENT /* Первичный ключ */,'
      '  db_folders_id INTEGER /* Код папки */,'
      '  db_database_caption VARCHAR(250) NOT NULL /* Наименование БД */,'
      '  db_database_sql_engine VARCHAR(100) NOT NULL /* Наименование движка БД */,'
      '  db_database_server_name VARCHAR(250) /* Наименование сервера */,'
      '  db_database_database_name VARCHAR(250) NOT NULL /* Наименование БД */,'
      '  db_database_username VARCHAR(200) /* Имя пользователя */,'
      '  db_database_password VARCHAR(200) /* Пароль подключения */,'
      '  db_database_user_role VARCHAR(200) /* Роль подключения */,'
      '  db_database_connected_charset VARCHAR(100) /* Набор символов для подключения к БД */,'
      '  db_database_server_version VARCHAR(100) /* Строка версии сервера */,'
      '  db_database_remote_port INTEGER /* Сетевой порт для подключения */,'
      '  db_database_description BLOB /* Описание БД */, '
      '  db_database_sort_order INTEGER /* Порядок сортировки */, '
      '  report_manager_folder VARCHAR(250) /* Папка, в которой находятся шаблоны отчётов */, '
      '  sp_editor_lazzy_mode BOOLEAN /* Ленивый режим редактора процедур */, '
      '  trg_editor_lazzy_mode BOOLEAN /* Ленивый режим редактора триггеров */, '
      '  show_system_domains BOOLEAN /* Отображать системные домены */, '
      '  show_system_tables BOOLEAN /* Отображать системные таблицы */, '
      '  show_system_views BOOLEAN /* Отображать системные представления */, '
      '  db_database_shedule BOOLEAN /* Использовать планировщик сервера */, '
      '  db_database_library_name VARCHAR(250) /* Путь к библиотеке для подключения к БД */, '
      '  db_database_authentication_type VARCHAR(250) /* Тип подключения к БД */, '
      '  db_database_auto_grant BOOLEAN /* Автоматическая раздача привилегий */, '
      '  db_database_use_log_meta BOOLEAN /* Использовать протоколирование изменения метаданных */, '
      '  db_database_use_log_editor BOOLEAN /* Использовать протоколирование редактора SQL */, '
      '  db_database_log_meta_filename VARCHAR(250) /* Имя файла для записи протокола */, '
      '  db_database_log_editor_filename VARCHAR(250) /* Имя файла для протоколирования команд SQL редактора */, '
      '  db_database_use_log_meta_custom_charset BOOLEAN /* Признак использования не стандарной кодировки протоколирования метаданных */, '
      '  db_database_log_meta_custom_charset VARCHAR(150) /* Наименование кодировки для протоколирования метаданных */, '
      '  db_database_use_log_write_timestamp BOOLEAN /* Запись временной метки в файл протокола */,'
      '  show_child_objects BOOLEAN,'
      '  db_database_log_script_exec_filename CHAR(250) /* Протоколирование исполнения скриптов */,'
      '  db_database_use_log_script_exec BOOLEAN /* Использовать протоколирование редактора скриптов */,'
      ' CONSTRAINT fk_db_database_1 FOREIGN KEY (db_folders_id) REFERENCES db_folders (db_folders_id) ON UPDATE CASCADE ON DELETE SET NULL'
      ');'
      'CREATE TABLE sql_editor_folders('
      '/* Папки в редакторе SQL */'
      '  sql_editor_folders_id INTEGER PRIMARY KEY AUTOINCREMENT/* Первичный ключ */,'
      '  sql_editor_folders_name VARCHAR(100) /* Наименование папки */,'
      '  sql_editor_folders_code INTEGER /* Порядок сортировки */,'
      '  sql_editor_folders_desc BLOB /* Описание папки */,'
      '  db_database_id INTEGER /* ID базы, к которой относится данная папка редактора */,'
      ' CONSTRAINT fk_sql_editor_folders_1 FOREIGN KEY (db_database_id) REFERENCES db_database (db_database_id) ON UPDATE CASCADE ON DELETE CASCADE'
      ');'
      'CREATE TABLE sql_editors('
      '/* Таблица содержит все тексты из редаткоров запросов */'
      '  sql_editors_id INTEGER PRIMARY KEY AUTOINCREMENT /* Первичный ключ */,'
      '  db_database_id INTEGER /* ID базы, к которой относится данный запрос */,'
      '  sql_editor_folders_id INTEGER /* ID папки запросов */,'
      '  sql_editors_caption VARCHAR(250) /* Наименование запроса */,'
      '  sql_editors_sort_order INTEGER /* Порядок сортировки */,'
      '  sql_editors_carret_pos_x INTEGER /* Позиция курсора по X */,'
      '  sql_editors_carret_pos_y INTEGER /* Позиция курсора по Y */,'
      '  sql_editors_sel_start INTEGER /* Начало выделенного фрагмента */,'
      '  sql_editors_sel_end INTEGER /* Конец выделенного фрагмента */,'
      '  sql_editors_body BLOB /*  Текст SQL редактора */,'
      ' CONSTRAINT fk_sql_editors_1 FOREIGN KEY (db_database_id) REFERENCES db_database (db_database_id) ON UPDATE CASCADE ON DELETE CASCADE,'
      ' CONSTRAINT fk_sql_editors_2 FOREIGN KEY (sql_editor_folders_id) REFERENCES sql_editor_folders (sql_editor_folders_id) ON UPDATE CASCADE ON DELETE SET NULL'
      ');'
      'CREATE TABLE sys_const('
      '/* Таблица содержит системные параметры */'
      '  sys_const_name VARCHAR(250) PRIMARY KEY/* Наименование параметра */,'
      '  sys_const_value VARCHAR(250) /* Значение параметра */,'
      '  sys_consts_value_type INTEGER /* Тип данных'
      '1 - целое'
      '2 - строка'
      '3 - логическая'
      '4 - дата'
      '5 - вещественное */'
      ');'
      'CREATE TABLE db_recent_objects('
      '/* Последние использованные объекты в БД */'
      '  db_recent_objects_id INTEGER PRIMARY KEY AUTOINCREMENT /* Первичный ключ */,'
      '  db_database_id INTEGER NOT NULL /* ID базы данных */,'
      '  db_recent_objects_type INTEGER NOT NULL /* Тип объекта'
      '0 - открытое окно'
      '2 - последние закрытые объекты'
      '3 - последние файлы из редактора sql'
      '4 - последние файлы из редактора скриптов'
      '5 - открыто окно редактора SQL. наименование объекта не важно'
      '*/,'
      '  db_recent_objects_name VARCHAR(250) /* Имя последнего объекта */,'
      '  db_recent_objects_date TIMESTAMP /* Дата и время последнего обращения */,'
      ' CONSTRAINT fk_db_recent_objects_1 FOREIGN KEY (db_database_id) REFERENCES db_database (db_database_id) ON UPDATE CASCADE ON DELETE CASCADE'
      ');'
      'CREATE TABLE sql_editors_history_param('
      '/* Таблица истории параметров запросов */'
      '  sql_editors_history_param_id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT /* Первичный ключ */,'
      '  db_database_id INTEGER NOT NULL /* ID базы данных */,'
      '  sql_editors_history_param_name VARCHAR(250) NOT NULL /* Наименование параметра */,'
      '  sql_editors_history_param_value VARCHAR(250) /* Значение параметра */,'
      '  sql_editors_history_param_type INTEGER NOT NULL /* Тип параметра'
      '1 - целое'
      '2 - строка'
      '3 - логическая'
      '4 - дата'
      '5 - вещественное */,'
      ' CONSTRAINT fk_sql_editors_history_param_1 FOREIGN KEY (db_database_id) REFERENCES db_database (db_database_id) ON UPDATE CASCADE ON DELETE CASCADE'
      ');'
      'CREATE TABLE sql_editors_history('
      '/* Таблица содержит историю запросов */'
      '  sql_editors_history_id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT /* Первичный ключ */,'
      '  db_database_id INTEGER NOT NULL /* ID базы данных */,'
      '  sql_editors_history_date TIMESTAMP /* Дата и время выполнения запроса */,'
      '  sql_editors_history_sql_type INTEGER /* Тип запроса'
      '  0 - select,'
      '  1 - ins,'
      '  2 - upd,'
      '  3 - del */,'
      '  sql_editors_history_exec_time TIME /* Время выполнения запроса */,'
      '  sql_editors_history_sql_page_name VARCHAR(250) /* Имя страницы, с которой был запущен запрос */,'
      '  sql_editors_history_sql_text BLOB /* Текст запроса */,'
      '  sql_editors_history_sql_plan BLOB /* План запроса */,'
      ' CONSTRAINT fk_sql_editors_history_1 FOREIGN KEY (db_database_id) REFERENCES db_database (db_database_id) ON UPDATE CASCADE ON DELETE CASCADE'
      ');'
      ''
      'CREATE TABLE db_connection_plugin_data('
      '/* Информация подключаемых модулей */'
      '  db_database_id INTEGER /* ID базы данных */,'
      '  db_connection_plugin_data_class_type VARCHAR(255) /* Тип плагина */,'
      '  db_connection_plugin_data_variable_name VARCHAR(150) /* Имя переменной */,'
      '  db_connection_plugin_data_variable_value VARCHAR(255) /* Значение переменной */,'
      ' PRIMARY KEY (db_database_id, db_connection_plugin_data_class_type, db_connection_plugin_data_variable_name)'
      ' CONSTRAINT fk_db_connection_plugin_data_1 FOREIGN KEY (db_database_id) REFERENCES db_database (db_database_id) ON UPDATE CASCADE ON DELETE CASCADE'
      ');'
      ''
      'CREATE TABLE db_connection_options('
      '  db_database_id INTEGER,'
      '  db_connection_options_name VARCHAR(100),'
      '  db_connection_options_value VARCHAR(500),'
      '  PRIMARY KEY (db_database_id, db_connection_options_name)'
      '  CONSTRAINT fk_db_connection_options_1 FOREIGN KEY (db_database_id) REFERENCES db_database (db_database_id) ON UPDATE CASCADE ON DELETE CASCADE'
      ');'
      ''
      'COMMIT;'
    )
    Connection = UserDB
    Delimiter = ';'
    Left = 131
    Top = 8
  end
  object ZReadOnlyQuery1: TZReadOnlyQuery
    Params = <>
    Options = [doCalcDefaults, doPreferPrepared]
    Left = 48
    Top = 256
  end
  object quSysConst1: TZReadOnlyQuery
    Connection = UserDB
    SQL.Strings = (
      'SELECT'
      '  sys_const.sys_const_name,'
      '  sys_const.sys_const_value,'
      '  sys_const.sys_consts_value_type'
      'FROM'
      '  sys_const'
      'order by'
      '  sys_const.sys_const_name'
    )
    Params = <>
    Options = [doCalcDefaults, doPreferPrepared]
    Left = 276
    Top = 14
    object quSysConst1sys_consts_value_type: TLongintField
      DisplayWidth = 10
      FieldKind = fkData
      FieldName = 'sys_consts_value_type'
      Index = 0
      LookupCache = False
      ProviderFlags = [pfInUpdate, pfInWhere]
      ReadOnly = False
      Required = False
    end
    object quSysConst1sys_const_name: TStringField
      FieldKind = fkData
      FieldName = 'sys_const_name'
      Index = 1
      LookupCache = False
      ProviderFlags = [pfInUpdate, pfInWhere]
      ReadOnly = False
      Required = True
      Size = 1000
    end
    object quSysConst1sys_const_value: TStringField
      FieldKind = fkData
      FieldName = 'sys_const_value'
      Index = 2
      LookupCache = False
      ProviderFlags = [pfInUpdate, pfInWhere]
      ReadOnly = False
      Required = False
      Size = 1000
    end
  end
  object usSysConst: TZUpdateSQL
    DeleteSQL.Strings = (
      'DELETE FROM sys_const'
      'WHERE'
      '  ((sys_const.sys_const_name IS NULL AND :OLD_sys_const_name IS NULL) OR (sys_const.sys_const_name = :OLD_sys_const_name))'
    )
    InsertSQL.Strings = (
      'INSERT INTO sys_const'
      '  (sys_const_name, sys_const_value, sys_consts_value_type)'
      'VALUES'
      '  (:sys_const_name, :sys_const_value, :sys_consts_value_type)'
    )
    ModifySQL.Strings = (
      'UPDATE sys_const SET'
      '  sys_const_name = :sys_const_name,'
      '  sys_const_value = :sys_const_value,'
      '  sys_consts_value_type = :sys_consts_value_type'
      'WHERE'
      '  (sys_const.sys_const_name = :sys_const_name)'
    )
    UseSequenceFieldForRefreshSQL = False
    Left = 232
    Top = 14
    ParamData = <    
      item
        DataType = ftUnknown
        Name = 'sys_const_name'
        ParamType = ptUnknown
      end    
      item
        DataType = ftUnknown
        Name = 'sys_const_value'
        ParamType = ptUnknown
      end    
      item
        DataType = ftUnknown
        Name = 'sys_consts_value_type'
        ParamType = ptUnknown
      end    
      item
        DataType = ftUnknown
        Name = 'OLD_sys_const_name'
        ParamType = ptUnknown
      end>
  end
  object quSysConst: TZQuery
    Connection = UserDB
    UpdateObject = usSysConst
    SQL.Strings = (
      'SELECT'
      '  sys_const.sys_const_name,'
      '  sys_const.sys_const_value,'
      '  sys_const.sys_consts_value_type'
      'FROM'
      '  sys_const'
      'where'
      '  sys_const.sys_const_name = :sys_const_name'
      'order by'
      '  sys_const.sys_const_name'
    )
    Params = <    
      item
        DataType = ftUnknown
        Name = 'sys_const_name'
        ParamType = ptUnknown
      end>
    Left = 192
    Top = 14
    ParamData = <    
      item
        DataType = ftUnknown
        Name = 'sys_const_name'
        ParamType = ptUnknown
      end>
  end
  object OldUserDB: TZConnection
    ControlsCodePage = cCP_UTF8
    AutoEncodeStrings = False
    ClientCodepage = 'UTF-8'
    Properties.Strings = (
      'AutoEncodeStrings='
      'codepage=UTF-8'
    )
    DesignConnection = True
    Port = 0
    Database = '/home/work/FBManager/sql/fbm_meta_base.db'
    Protocol = 'sqlite-3'
    Left = 592
    Top = 8
  end
  object quOldSysConst: TZQuery
    Connection = OldUserDB
    UpdateObject = usSysConst
    SQL.Strings = (
      'SELECT'
      '  *'
      'FROM'
      '  sys_const'
    )
    Params = <>
    Left = 640
    Top = 8
  end
  object usFolders: TZUpdateSQL
    DeleteSQL.Strings = (
      'DELETE FROM db_folders'
      'WHERE'
      '  ((db_folders.db_folders_id IS NULL AND :OLD_db_folders_id IS NULL) OR (db_folders.db_folders_id = :OLD_db_folders_id))'
    )
    InsertSQL.Strings = (
      'INSERT INTO db_folders'
      '  (db_folders_id, db_folders_code, db_folders_name, db_folders_desc, db_folders_expanded)'
      'VALUES'
      '  (:db_folders_id, :db_folders_code, :db_folders_name, :db_folders_desc, '
      '   :db_folders_expanded)'
    )
    ModifySQL.Strings = (
      'UPDATE db_folders SET'
      '  db_folders_id = :db_folders_id,'
      '  db_folders_code = :db_folders_code,'
      '  db_folders_name = :db_folders_name,'
      '  db_folders_desc = :db_folders_desc,'
      '  db_folders_expanded = :db_folders_expanded'
      'WHERE'
      '  ((db_folders.db_folders_id IS NULL AND :OLD_db_folders_id IS NULL) OR (db_folders.db_folders_id = :OLD_db_folders_id))'
    )
    UseSequenceFieldForRefreshSQL = False
    Left = 232
    Top = 78
    ParamData = <    
      item
        DataType = ftUnknown
        Name = 'db_folders_id'
        ParamType = ptUnknown
      end    
      item
        DataType = ftUnknown
        Name = 'db_folders_code'
        ParamType = ptUnknown
      end    
      item
        DataType = ftUnknown
        Name = 'db_folders_name'
        ParamType = ptUnknown
      end    
      item
        DataType = ftUnknown
        Name = 'db_folders_desc'
        ParamType = ptUnknown
      end    
      item
        DataType = ftUnknown
        Name = 'db_folders_expanded'
        ParamType = ptUnknown
      end    
      item
        DataType = ftUnknown
        Name = 'OLD_db_folders_id'
        ParamType = ptUnknown
      end>
  end
  object quFolders: TZQuery
    Connection = UserDB
    UpdateObject = usFolders
    SQL.Strings = (
      'select'
      '  db_folders.db_folders_id,'
      '  db_folders.db_folders_code,'
      '  db_folders.db_folders_name,'
      '  db_folders.db_folders_desc,'
      '  db_folders.db_folders_expanded'
      'from'
      '  db_folders'
      'order by'
      '  db_folders.db_folders_code'
    )
    Params = <>
    Left = 192
    Top = 78
  end
  object usDatabases: TZUpdateSQL
    DeleteSQL.Strings = (
      'DELETE FROM db_database'
      'WHERE'
      '  ((db_database.db_database_id IS NULL AND :OLD_db_database_id IS NULL) OR (db_database.db_database_id = :OLD_db_database_id))'
    )
    InsertSQL.Strings = (
      'INSERT INTO db_database'
      '  (db_database_id, db_folders_id, db_database_caption, db_database_sql_engine, '
      '   db_database_server_name, db_database_database_name, db_database_username, '
      '   db_database_password, db_database_user_role, db_database_connected_charset, '
      '   db_database_server_version, db_database_remote_port, db_database_description, '
      '   db_database_sort_order, report_manager_folder, sp_editor_lazzy_mode, '
      '   trg_editor_lazzy_mode, show_system_domains, show_system_tables, show_system_views, '
      '   db_database_shedule, db_database_library_name, db_database_authentication_type, '
      '   db_database_auto_grant, db_database_use_log_meta, db_database_use_log_editor, '
      '   db_database_log_meta_filename, db_database_log_editor_filename, db_database_use_log_meta_custom_charset, '
      '   db_database_use_log_write_timestamp, db_database_log_meta_custom_charset, show_child_objects, db_database_log_script_exec_filename,'
      '   db_database_use_log_script_exec)'
      'VALUES'
      '  (:db_database_id, :db_folders_id, :db_database_caption, :db_database_sql_engine, '
      '   :db_database_server_name, :db_database_database_name, :db_database_username, '
      '   :db_database_password, :db_database_user_role, :db_database_connected_charset, '
      '   :db_database_server_version, :db_database_remote_port, :db_database_description, '
      '   :db_database_sort_order, :report_manager_folder, :sp_editor_lazzy_mode, '
      '   :trg_editor_lazzy_mode, :show_system_domains, :show_system_tables, :show_system_views, '
      '   :db_database_shedule, :db_database_library_name, :db_database_authentication_type, '
      '   :db_database_auto_grant, :db_database_use_log_meta, :db_database_use_log_editor, '
      '   :db_database_log_meta_filename, :db_database_log_editor_filename, :db_database_use_log_meta_custom_charset, '
      '   :db_database_use_log_write_timestamp, :db_database_log_meta_custom_charset, :show_child_objects, :db_database_log_script_exec_filename,'
      '   :db_database_use_log_script_exec)'
    )
    ModifySQL.Strings = (
      'UPDATE db_database SET'
      '  db_database_id = :db_database_id,'
      '  db_folders_id = :db_folders_id,'
      '  db_database_caption = :db_database_caption,'
      '  db_database_sql_engine = :db_database_sql_engine,'
      '  db_database_server_name = :db_database_server_name,'
      '  db_database_database_name = :db_database_database_name,'
      '  db_database_username = :db_database_username,'
      '  db_database_password = :db_database_password,'
      '  db_database_user_role = :db_database_user_role,'
      '  db_database_connected_charset = :db_database_connected_charset,'
      '  db_database_server_version = :db_database_server_version,'
      '  db_database_remote_port = :db_database_remote_port,'
      '  db_database_description = :db_database_description,'
      '  db_database_sort_order = :db_database_sort_order,'
      '  report_manager_folder = :report_manager_folder,'
      '  sp_editor_lazzy_mode = :sp_editor_lazzy_mode,'
      '  trg_editor_lazzy_mode = :trg_editor_lazzy_mode,'
      '  show_system_domains = :show_system_domains,'
      '  show_system_tables = :show_system_tables,'
      '  show_system_views = :show_system_views,'
      '  db_database_shedule = :db_database_shedule,'
      '  db_database_library_name = :db_database_library_name,'
      '  db_database_authentication_type = :db_database_authentication_type,'
      '  db_database_auto_grant = :db_database_auto_grant,'
      '  db_database_use_log_meta = :db_database_use_log_meta,'
      '  db_database_use_log_editor = :db_database_use_log_editor,'
      '  db_database_log_meta_filename = :db_database_log_meta_filename,'
      '  db_database_log_editor_filename = :db_database_log_editor_filename,'
      '  db_database_use_log_meta_custom_charset = :db_database_use_log_meta_custom_charset,'
      '  db_database_use_log_write_timestamp = :db_database_use_log_write_timestamp,'
      '  db_database_log_meta_custom_charset = :db_database_log_meta_custom_charset,'
      '  show_child_objects = :show_child_objects,'
      '  db_database_log_script_exec_filename = :db_database_log_script_exec_filename,'
      '  db_database_use_log_script_exec = :db_database_use_log_script_exec'
      'WHERE'
      '  ((db_database.db_database_id IS NULL AND :OLD_db_database_id IS NULL) OR (db_database.db_database_id = :OLD_db_database_id))'
    )
    UseSequenceFieldForRefreshSQL = False
    Left = 232
    Top = 136
    ParamData = <    
      item
        DataType = ftUnknown
        Name = 'db_database_id'
        ParamType = ptUnknown
      end    
      item
        DataType = ftUnknown
        Name = 'db_folders_id'
        ParamType = ptUnknown
      end    
      item
        DataType = ftUnknown
        Name = 'db_database_caption'
        ParamType = ptUnknown
      end    
      item
        DataType = ftUnknown
        Name = 'db_database_sql_engine'
        ParamType = ptUnknown
      end    
      item
        DataType = ftUnknown
        Name = 'db_database_server_name'
        ParamType = ptUnknown
      end    
      item
        DataType = ftUnknown
        Name = 'db_database_database_name'
        ParamType = ptUnknown
      end    
      item
        DataType = ftUnknown
        Name = 'db_database_username'
        ParamType = ptUnknown
      end    
      item
        DataType = ftUnknown
        Name = 'db_database_password'
        ParamType = ptUnknown
      end    
      item
        DataType = ftUnknown
        Name = 'db_database_user_role'
        ParamType = ptUnknown
      end    
      item
        DataType = ftUnknown
        Name = 'db_database_connected_charset'
        ParamType = ptUnknown
      end    
      item
        DataType = ftUnknown
        Name = 'db_database_server_version'
        ParamType = ptUnknown
      end    
      item
        DataType = ftUnknown
        Name = 'db_database_remote_port'
        ParamType = ptUnknown
      end    
      item
        DataType = ftUnknown
        Name = 'db_database_description'
        ParamType = ptUnknown
      end    
      item
        DataType = ftUnknown
        Name = 'db_database_sort_order'
        ParamType = ptUnknown
      end    
      item
        DataType = ftUnknown
        Name = 'report_manager_folder'
        ParamType = ptUnknown
      end    
      item
        DataType = ftUnknown
        Name = 'sp_editor_lazzy_mode'
        ParamType = ptUnknown
      end    
      item
        DataType = ftUnknown
        Name = 'trg_editor_lazzy_mode'
        ParamType = ptUnknown
      end    
      item
        DataType = ftUnknown
        Name = 'show_system_domains'
        ParamType = ptUnknown
      end    
      item
        DataType = ftUnknown
        Name = 'show_system_tables'
        ParamType = ptUnknown
      end    
      item
        DataType = ftUnknown
        Name = 'show_system_views'
        ParamType = ptUnknown
      end    
      item
        DataType = ftUnknown
        Name = 'db_database_shedule'
        ParamType = ptUnknown
      end    
      item
        DataType = ftUnknown
        Name = 'db_database_library_name'
        ParamType = ptUnknown
      end    
      item
        DataType = ftUnknown
        Name = 'db_database_authentication_type'
        ParamType = ptUnknown
      end    
      item
        DataType = ftUnknown
        Name = 'db_database_auto_grant'
        ParamType = ptUnknown
      end    
      item
        DataType = ftUnknown
        Name = 'db_database_use_log_meta'
        ParamType = ptUnknown
      end    
      item
        DataType = ftUnknown
        Name = 'db_database_use_log_editor'
        ParamType = ptUnknown
      end    
      item
        DataType = ftUnknown
        Name = 'db_database_log_meta_filename'
        ParamType = ptUnknown
      end    
      item
        DataType = ftUnknown
        Name = 'db_database_log_editor_filename'
        ParamType = ptUnknown
      end    
      item
        DataType = ftUnknown
        Name = 'db_database_use_log_meta_custom_charset'
        ParamType = ptUnknown
      end    
      item
        DataType = ftUnknown
        Name = 'db_database_use_log_write_timestamp'
        ParamType = ptUnknown
      end    
      item
        DataType = ftUnknown
        Name = 'db_database_log_meta_custom_charset'
        ParamType = ptUnknown
      end    
      item
        DataType = ftUnknown
        Name = 'show_child_objects'
        ParamType = ptUnknown
      end    
      item
        DataType = ftUnknown
        Name = 'db_database_log_script_exec_filename'
        ParamType = ptUnknown
      end    
      item
        DataType = ftUnknown
        Name = 'db_database_use_log_script_exec'
        ParamType = ptUnknown
      end    
      item
        DataType = ftUnknown
        Name = 'OLD_db_database_id'
        ParamType = ptUnknown
      end>
  end
  object quDatabases: TZQuery
    Connection = UserDB
    UpdateObject = usDatabases
    SQL.Strings = (
      'select'
      '  db_database.db_database_id,'
      '  db_database.db_folders_id,'
      '  db_database.db_database_caption,'
      '  db_database.db_database_sql_engine,'
      '  db_database.db_database_server_name,'
      '  db_database.db_database_database_name,'
      '  db_database.db_database_username,'
      '  db_database.db_database_password,'
      '  db_database.db_database_user_role,'
      '  db_database.db_database_connected_charset,'
      '  db_database.db_database_server_version,'
      '  db_database.db_database_remote_port,'
      '  db_database.db_database_description,'
      '  db_database.db_database_sort_order,'
      '  db_database.report_manager_folder,'
      '  db_database.sp_editor_lazzy_mode,'
      '  db_database.trg_editor_lazzy_mode,'
      '  db_database.show_system_domains,'
      '  db_database.show_system_tables,'
      '  db_database.show_system_views,'
      '  db_database.db_database_shedule,'
      '  db_database.db_database_library_name,'
      '  db_database.db_database_authentication_type,'
      '  db_database.db_database_auto_grant,'
      '  db_database.db_database_use_log_meta,'
      '  db_database.db_database_use_log_editor,'
      '  db_database.db_database_log_meta_filename,'
      '  db_database.db_database_log_editor_filename,'
      '  db_database.db_database_use_log_meta_custom_charset,'
      '  db_database.db_database_use_log_write_timestamp,'
      '  db_database.db_database_log_meta_custom_charset,'
      '  db_database.show_child_objects,'
      '  db_database.db_database_log_script_exec_filename,'
      '  db_database.db_database_use_log_script_exec'
      'from'
      '  db_database'
      'order by'
      '  coalesce(db_database.db_folders_id, -1),'
      '  db_database.db_database_sort_order'
    )
    Params = <>
    Left = 192
    Top = 136
  end
  object quOldFolders: TZQuery
    Connection = OldUserDB
    UpdateObject = usFolders
    SQL.Strings = (
      'select'
      '  *'
      'from'
      '  db_folders'
    )
    Params = <>
    Left = 640
    Top = 66
  end
  object usParamsHistory: TZUpdateSQL
    DeleteSQL.Strings = (
      'DELETE FROM sql_editors_history_param'
      'WHERE'
      '  ((sql_editors_history_param.sql_editors_history_param_id IS NULL AND :OLD_sql_editors_history_param_id IS NULL) OR (sql_editors_history_param.sql_editors_history_param_id = :OLD_sql_editors_history_param_id))'
    )
    InsertSQL.Strings = (
      'INSERT INTO sql_editors_history_param'
      '  (sql_editors_history_param_id, db_database_id, sql_editors_history_param_name, '
      '   sql_editors_history_param_value, sql_editors_history_param_type)'
      'VALUES'
      '  (:sql_editors_history_param_id, :db_database_id, :sql_editors_history_param_name, '
      '   :sql_editors_history_param_value, :sql_editors_history_param_type)'
    )
    ModifySQL.Strings = (
      'UPDATE sql_editors_history_param SET'
      '  sql_editors_history_param_id = :sql_editors_history_param_id,'
      '  db_database_id = :db_database_id,'
      '  sql_editors_history_param_name = :sql_editors_history_param_name,'
      '  sql_editors_history_param_value = :sql_editors_history_param_value,'
      '  sql_editors_history_param_type = :sql_editors_history_param_type'
      'WHERE'
      '  ((sql_editors_history_param.sql_editors_history_param_id IS NULL AND :OLD_sql_editors_history_param_id IS NULL) OR (sql_editors_history_param.sql_editors_history_param_id = :OLD_sql_editors_history_param_id))'
    )
    UseSequenceFieldForRefreshSQL = False
    Left = 232
    Top = 192
    ParamData = <    
      item
        DataType = ftUnknown
        Name = 'sql_editors_history_param_id'
        ParamType = ptUnknown
      end    
      item
        DataType = ftUnknown
        Name = 'db_database_id'
        ParamType = ptUnknown
      end    
      item
        DataType = ftUnknown
        Name = 'sql_editors_history_param_name'
        ParamType = ptUnknown
      end    
      item
        DataType = ftUnknown
        Name = 'sql_editors_history_param_value'
        ParamType = ptUnknown
      end    
      item
        DataType = ftUnknown
        Name = 'sql_editors_history_param_type'
        ParamType = ptUnknown
      end    
      item
        DataType = ftUnknown
        Name = 'OLD_sql_editors_history_param_id'
        ParamType = ptUnknown
      end>
  end
  object quParamsHistory: TZQuery
    Connection = UserDB
    UpdateObject = usParamsHistory
    SQL.Strings = (
      'select'
      '  sql_editors_history_param.sql_editors_history_param_id,'
      '  sql_editors_history_param.db_database_id,'
      '  sql_editors_history_param.sql_editors_history_param_name,'
      '  sql_editors_history_param.sql_editors_history_param_value,'
      '  sql_editors_history_param.sql_editors_history_param_type'
      'from'
      '  sql_editors_history_param'
      'where'
      '  sql_editors_history_param.db_database_id = :db_database_id'
    )
    Params = <    
      item
        DataType = ftUnknown
        Name = 'db_database_id'
        ParamType = ptUnknown
      end>
    Left = 192
    Top = 192
    ParamData = <    
      item
        DataType = ftUnknown
        Name = 'db_database_id'
        ParamType = ptUnknown
      end>
  end
  object ZUpdateSQL4: TZUpdateSQL
    UseSequenceFieldForRefreshSQL = False
    Left = 232
    Top = 536
  end
  object ZQuery4: TZQuery
    Connection = UserDB
    UpdateObject = ZUpdateSQL4
    Params = <>
    Left = 192
    Top = 536
  end
  object usRecentItems: TZUpdateSQL
    DeleteSQL.Strings = (
      'DELETE FROM db_recent_objects'
      'WHERE'
      '  ((db_recent_objects.db_recent_objects_id IS NULL AND :OLD_db_recent_objects_id IS NULL) OR (db_recent_objects.db_recent_objects_id = :OLD_db_recent_objects_id))'
    )
    InsertSQL.Strings = (
      'INSERT INTO db_recent_objects'
      '  (db_recent_objects_id, db_database_id, db_recent_objects_type, db_recent_objects_name, '
      '   db_recent_objects_date)'
      'VALUES'
      '  (:db_recent_objects_id, :db_database_id, :db_recent_objects_type, :db_recent_objects_name, '
      '   :db_recent_objects_date)'
    )
    ModifySQL.Strings = (
      'UPDATE db_recent_objects SET'
      '  db_recent_objects_id = :db_recent_objects_id,'
      '  db_database_id = :db_database_id,'
      '  db_recent_objects_type = :db_recent_objects_type,'
      '  db_recent_objects_name = :db_recent_objects_name,'
      '  db_recent_objects_date = :db_recent_objects_date'
      'WHERE'
      '  ((db_recent_objects.db_recent_objects_id IS NULL AND :OLD_db_recent_objects_id IS NULL) OR (db_recent_objects.db_recent_objects_id = :OLD_db_recent_objects_id))'
    )
    UseSequenceFieldForRefreshSQL = False
    Left = 232
    Top = 248
    ParamData = <    
      item
        DataType = ftUnknown
        Name = 'db_recent_objects_id'
        ParamType = ptUnknown
      end    
      item
        DataType = ftUnknown
        Name = 'db_database_id'
        ParamType = ptUnknown
      end    
      item
        DataType = ftUnknown
        Name = 'db_recent_objects_type'
        ParamType = ptUnknown
      end    
      item
        DataType = ftUnknown
        Name = 'db_recent_objects_name'
        ParamType = ptUnknown
      end    
      item
        DataType = ftUnknown
        Name = 'db_recent_objects_date'
        ParamType = ptUnknown
      end    
      item
        DataType = ftUnknown
        Name = 'OLD_db_recent_objects_id'
        ParamType = ptUnknown
      end>
  end
  object quRecentItems: TZQuery
    Connection = UserDB
    UpdateObject = usRecentItems
    SQL.Strings = (
      'select'
      '  db_recent_objects.db_recent_objects_id,'
      '  db_recent_objects.db_database_id,'
      '  db_recent_objects.db_recent_objects_type,'
      '  db_recent_objects.db_recent_objects_name,'
      '  db_recent_objects.db_recent_objects_date'
      'from'
      '  db_recent_objects'
      'where'
      '    db_recent_objects.db_database_id = :db_database_id'
      '  and'
      '    db_recent_objects.db_recent_objects_type = :db_recent_objects_type'
      'order by'
      '  db_recent_objects.db_recent_objects_date desc'
    )
    Params = <    
      item
        DataType = ftUnknown
        Name = 'db_database_id'
        ParamType = ptUnknown
      end    
      item
        DataType = ftUnknown
        Name = 'db_recent_objects_type'
        ParamType = ptUnknown
      end>
    Left = 192
    Top = 248
    ParamData = <    
      item
        DataType = ftUnknown
        Name = 'db_database_id'
        ParamType = ptUnknown
      end    
      item
        DataType = ftUnknown
        Name = 'db_recent_objects_type'
        ParamType = ptUnknown
      end>
  end
  object usSQLHistory: TZUpdateSQL
    DeleteSQL.Strings = (
      'DELETE FROM sql_editors_history'
      'WHERE'
      '  ((sql_editors_history.sql_editors_history_id IS NULL AND :OLD_sql_editors_history_id IS NULL) OR (sql_editors_history.sql_editors_history_id = :OLD_sql_editors_history_id))'
    )
    InsertSQL.Strings = (
      'INSERT INTO sql_editors_history'
      '  (sql_editors_history_id, db_database_id, sql_editors_history_date, sql_editors_history_sql_type, '
      '   sql_editors_history_exec_time, sql_editors_history_sql_page_name, sql_editors_history_sql_text, '
      '   sql_editors_history_sql_plan)'
      'VALUES'
      '  (:sql_editors_history_id, :db_database_id, :sql_editors_history_date, '
      '   :sql_editors_history_sql_type, :sql_editors_history_exec_time, :sql_editors_history_sql_page_name, '
      '   :sql_editors_history_sql_text, :sql_editors_history_sql_plan)'
    )
    ModifySQL.Strings = (
      'UPDATE sql_editors_history SET'
      '  sql_editors_history_id = :sql_editors_history_id,'
      '  db_database_id = :db_database_id,'
      '  sql_editors_history_date = :sql_editors_history_date,'
      '  sql_editors_history_sql_type = :sql_editors_history_sql_type,'
      '  sql_editors_history_exec_time = :sql_editors_history_exec_time,'
      '  sql_editors_history_sql_page_name = :sql_editors_history_sql_page_name,'
      '  sql_editors_history_sql_text = :sql_editors_history_sql_text,'
      '  sql_editors_history_sql_plan = :sql_editors_history_sql_plan'
      'WHERE'
      '  ((sql_editors_history.sql_editors_history_id IS NULL AND :OLD_sql_editors_history_id IS NULL) OR (sql_editors_history.sql_editors_history_id = :OLD_sql_editors_history_id))'
    )
    UseSequenceFieldForRefreshSQL = False
    Left = 232
    Top = 296
    ParamData = <    
      item
        DataType = ftUnknown
        Name = 'sql_editors_history_id'
        ParamType = ptUnknown
      end    
      item
        DataType = ftUnknown
        Name = 'db_database_id'
        ParamType = ptUnknown
      end    
      item
        DataType = ftUnknown
        Name = 'sql_editors_history_date'
        ParamType = ptUnknown
      end    
      item
        DataType = ftUnknown
        Name = 'sql_editors_history_sql_type'
        ParamType = ptUnknown
      end    
      item
        DataType = ftUnknown
        Name = 'sql_editors_history_exec_time'
        ParamType = ptUnknown
      end    
      item
        DataType = ftUnknown
        Name = 'sql_editors_history_sql_page_name'
        ParamType = ptUnknown
      end    
      item
        DataType = ftUnknown
        Name = 'sql_editors_history_sql_text'
        ParamType = ptUnknown
      end    
      item
        DataType = ftUnknown
        Name = 'sql_editors_history_sql_plan'
        ParamType = ptUnknown
      end    
      item
        DataType = ftUnknown
        Name = 'OLD_sql_editors_history_id'
        ParamType = ptUnknown
      end>
  end
  object quSQLHistory: TZQuery
    Connection = UserDB
    UpdateObject = usSQLHistory
    SQL.Strings = (
      'select'
      '  sql_editors_history.sql_editors_history_id,'
      '  sql_editors_history.db_database_id,'
      '  sql_editors_history.sql_editors_history_date,'
      '  sql_editors_history.sql_editors_history_sql_type,'
      '  sql_editors_history.sql_editors_history_exec_time,'
      '  sql_editors_history.sql_editors_history_sql_page_name,'
      '  sql_editors_history.sql_editors_history_sql_text,'
      '  sql_editors_history.sql_editors_history_sql_plan '
      'from'
      '  sql_editors_history'
      'where'
      '  sql_editors_history.db_database_id = :db_database_id'
      'order by'
      '  sql_editors_history.sql_editors_history_date '
    )
    Params = <    
      item
        DataType = ftUnknown
        Name = 'db_database_id'
        ParamType = ptUnknown
      end>
    Left = 192
    Top = 296
    ParamData = <    
      item
        DataType = ftUnknown
        Name = 'db_database_id'
        ParamType = ptUnknown
      end>
  end
  object usSQLFolders: TZUpdateSQL
    DeleteSQL.Strings = (
      'DELETE FROM sql_editor_folders'
      'WHERE'
      '  ((sql_editor_folders.sql_editor_folders_id IS NULL AND :OLD_sql_editor_folders_id IS NULL) OR (sql_editor_folders.sql_editor_folders_id = :OLD_sql_editor_folders_id))'
    )
    InsertSQL.Strings = (
      'INSERT INTO sql_editor_folders'
      '  (sql_editor_folders_name, sql_editor_folders_code, '
      '   sql_editor_folders_desc, db_database_id)'
      'VALUES'
      '  (:sql_editor_folders_name, :sql_editor_folders_code, '
      '   :sql_editor_folders_desc, :db_database_id)'
    )
    ModifySQL.Strings = (
      'UPDATE sql_editor_folders SET'
      '  sql_editor_folders_id = :sql_editor_folders_id,'
      '  sql_editor_folders_name = :sql_editor_folders_name,'
      '  sql_editor_folders_code = :sql_editor_folders_code,'
      '  sql_editor_folders_desc = :sql_editor_folders_desc,'
      '  db_database_id = :db_database_id'
      'WHERE'
      '  ((sql_editor_folders.sql_editor_folders_id IS NULL AND :OLD_sql_editor_folders_id IS NULL) OR (sql_editor_folders.sql_editor_folders_id = :OLD_sql_editor_folders_id))'
    )
    UseSequenceFieldForRefreshSQL = False
    Left = 232
    Top = 352
    ParamData = <    
      item
        DataType = ftUnknown
        Name = 'sql_editor_folders_id'
        ParamType = ptUnknown
      end    
      item
        DataType = ftUnknown
        Name = 'sql_editor_folders_name'
        ParamType = ptUnknown
      end    
      item
        DataType = ftUnknown
        Name = 'sql_editor_folders_code'
        ParamType = ptUnknown
      end    
      item
        DataType = ftUnknown
        Name = 'sql_editor_folders_desc'
        ParamType = ptUnknown
      end    
      item
        DataType = ftUnknown
        Name = 'db_database_id'
        ParamType = ptUnknown
      end    
      item
        DataType = ftUnknown
        Name = 'OLD_sql_editor_folders_id'
        ParamType = ptUnknown
      end>
  end
  object quSQLFolders: TZQuery
    Connection = UserDB
    UpdateObject = usSQLFolders
    SQL.Strings = (
      'select'
      '  sql_editor_folders.sql_editor_folders_id,'
      '  sql_editor_folders.sql_editor_folders_name,'
      '  sql_editor_folders.sql_editor_folders_code,'
      '  sql_editor_folders.sql_editor_folders_desc,'
      '  sql_editor_folders.db_database_id'
      'from'
      '  sql_editor_folders'
      'where'
      '  sql_editor_folders.db_database_id = :db_database_id'
      'order by'
      '  sql_editor_folders.sql_editor_folders_code'
    )
    Params = <    
      item
        DataType = ftUnknown
        Name = 'db_database_id'
        ParamType = ptUnknown
      end>
    Left = 192
    Top = 352
    ParamData = <    
      item
        DataType = ftUnknown
        Name = 'db_database_id'
        ParamType = ptUnknown
      end>
  end
  object usSQLPages: TZUpdateSQL
    DeleteSQL.Strings = (
      'DELETE FROM sql_editors'
      'WHERE'
      '  ((sql_editors.sql_editors_id IS NULL AND :OLD_sql_editors_id IS NULL) OR (sql_editors.sql_editors_id = :OLD_sql_editors_id))'
    )
    InsertSQL.Strings = (
      'INSERT INTO sql_editors'
      '  (sql_editors_id, db_database_id, sql_editor_folders_id, sql_editors_caption, '
      '   sql_editors_sort_order, sql_editors_carret_pos_x, sql_editors_carret_pos_y, '
      '   sql_editors_sel_start, sql_editors_sel_end, sql_editors_body)'
      'VALUES'
      '  (:sql_editors_id, :db_database_id, :sql_editor_folders_id, :sql_editors_caption, '
      '   :sql_editors_sort_order, :sql_editors_carret_pos_x, :sql_editors_carret_pos_y, '
      '   :sql_editors_sel_start, :sql_editors_sel_end, :sql_editors_body)'
    )
    ModifySQL.Strings = (
      'UPDATE sql_editors SET'
      '  sql_editors_id = :sql_editors_id,'
      '  db_database_id = :db_database_id,'
      '  sql_editor_folders_id = :sql_editor_folders_id,'
      '  sql_editors_caption = :sql_editors_caption,'
      '  sql_editors_sort_order = :sql_editors_sort_order,'
      '  sql_editors_carret_pos_x = :sql_editors_carret_pos_x,'
      '  sql_editors_carret_pos_y = :sql_editors_carret_pos_y,'
      '  sql_editors_sel_start = :sql_editors_sel_start,'
      '  sql_editors_sel_end = :sql_editors_sel_end,'
      '  sql_editors_body = :sql_editors_body'
      'WHERE'
      '  ((sql_editors.sql_editors_id IS NULL AND :OLD_sql_editors_id IS NULL) OR (sql_editors.sql_editors_id = :OLD_sql_editors_id))'
    )
    UseSequenceFieldForRefreshSQL = False
    Left = 232
    Top = 409
    ParamData = <    
      item
        DataType = ftUnknown
        Name = 'sql_editors_id'
        ParamType = ptUnknown
      end    
      item
        DataType = ftUnknown
        Name = 'db_database_id'
        ParamType = ptUnknown
      end    
      item
        DataType = ftUnknown
        Name = 'sql_editor_folders_id'
        ParamType = ptUnknown
      end    
      item
        DataType = ftUnknown
        Name = 'sql_editors_caption'
        ParamType = ptUnknown
      end    
      item
        DataType = ftUnknown
        Name = 'sql_editors_sort_order'
        ParamType = ptUnknown
      end    
      item
        DataType = ftUnknown
        Name = 'sql_editors_carret_pos_x'
        ParamType = ptUnknown
      end    
      item
        DataType = ftUnknown
        Name = 'sql_editors_carret_pos_y'
        ParamType = ptUnknown
      end    
      item
        DataType = ftUnknown
        Name = 'sql_editors_sel_start'
        ParamType = ptUnknown
      end    
      item
        DataType = ftUnknown
        Name = 'sql_editors_sel_end'
        ParamType = ptUnknown
      end    
      item
        DataType = ftUnknown
        Name = 'sql_editors_body'
        ParamType = ptUnknown
      end    
      item
        DataType = ftUnknown
        Name = 'OLD_sql_editors_id'
        ParamType = ptUnknown
      end>
  end
  object quSQLPages: TZQuery
    Connection = UserDB
    UpdateObject = usSQLPages
    SQL.Strings = (
      'select'
      '  sql_editors.sql_editors_id,'
      '  sql_editors.db_database_id,'
      '  sql_editors.sql_editor_folders_id,'
      '  sql_editors.sql_editors_caption,'
      '  sql_editors.sql_editors_sort_order,'
      '  sql_editors.sql_editors_carret_pos_x,'
      '  sql_editors.sql_editors_carret_pos_y,'
      '  sql_editors.sql_editors_sel_start,'
      '  sql_editors.sql_editors_sel_end,'
      '  sql_editors.sql_editors_body'
      'from'
      '  sql_editors'
      'where'
      '  sql_editors.db_database_id = :db_database_id'
      'order by'
      '  sql_editors.sql_editor_folders_id,'
      '  sql_editors.sql_editors_sort_order '
    )
    Params = <    
      item
        DataType = ftUnknown
        Name = 'db_database_id'
        ParamType = ptUnknown
      end>
    Left = 192
    Top = 409
    ParamData = <    
      item
        DataType = ftUnknown
        Name = 'db_database_id'
        ParamType = ptUnknown
      end>
  end
  object quSQLFoldersUpd: TZReadOnlyQuery
    Connection = UserDB
    SQL.Strings = (
      'INSERT OR REPLACE INTO sql_editor_folders'
      '  (sql_editor_folders_id, sql_editor_folders_name, sql_editor_folders_code,  sql_editor_folders_desc, db_database_id)'
      'VALUES'
      '  (:sql_editor_folders_id, :sql_editor_folders_name, :sql_editor_folders_code,  :sql_editor_folders_desc, :db_database_id)'
      '/*'
      'UPDATE '
      '  sql_editor_folders '
      'SET'
      '  sql_editor_folders_name = :sql_editor_folders_name,'
      '  sql_editor_folders_code = :sql_editor_folders_code,'
      '  sql_editor_folders_desc = :sql_editor_folders_desc,'
      '  db_database_id = :db_database_id'
      'WHERE'
      '  sql_editor_folders.sql_editor_folders_id = :sql_editor_folders_id'
      '*/'
    )
    Params = <    
      item
        DataType = ftUnknown
        Name = 'sql_editor_folders_id'
        ParamType = ptUnknown
      end    
      item
        DataType = ftUnknown
        Name = 'sql_editor_folders_name'
        ParamType = ptUnknown
      end    
      item
        DataType = ftUnknown
        Name = 'sql_editor_folders_code'
        ParamType = ptUnknown
      end    
      item
        DataType = ftUnknown
        Name = 'sql_editor_folders_desc'
        ParamType = ptUnknown
      end    
      item
        DataType = ftUnknown
        Name = 'db_database_id'
        ParamType = ptUnknown
      end>
    Options = [doCalcDefaults, doPreferPrepared]
    Left = 289
    Top = 352
    ParamData = <    
      item
        DataType = ftUnknown
        Name = 'sql_editor_folders_id'
        ParamType = ptUnknown
      end    
      item
        DataType = ftUnknown
        Name = 'sql_editor_folders_name'
        ParamType = ptUnknown
      end    
      item
        DataType = ftUnknown
        Name = 'sql_editor_folders_code'
        ParamType = ptUnknown
      end    
      item
        DataType = ftUnknown
        Name = 'sql_editor_folders_desc'
        ParamType = ptUnknown
      end    
      item
        DataType = ftUnknown
        Name = 'db_database_id'
        ParamType = ptUnknown
      end>
  end
  object quSQLPagesUpd: TZReadOnlyQuery
    Connection = UserDB
    SQL.Strings = (
      'UPDATE '
      '  sql_editors '
      'SET'
      '  db_database_id = :db_database_id,'
      '  sql_editor_folders_id = :sql_editor_folders_id,'
      '  sql_editors_caption = :sql_editors_caption,'
      '  sql_editors_sort_order = :sql_editors_sort_order,'
      '  sql_editors_carret_pos_x = :sql_editors_carret_pos_x,'
      '  sql_editors_carret_pos_y = :sql_editors_carret_pos_y,'
      '  sql_editors_sel_start = :sql_editors_sel_start,'
      '  sql_editors_sel_end = :sql_editors_sel_end,'
      '  sql_editors_body = :sql_editors_body'
      'WHERE'
      '  sql_editors.sql_editors_id = :sql_editors_id'
    )
    Params = <    
      item
        DataType = ftUnknown
        Name = 'db_database_id'
        ParamType = ptUnknown
      end    
      item
        DataType = ftUnknown
        Name = 'sql_editor_folders_id'
        ParamType = ptUnknown
      end    
      item
        DataType = ftUnknown
        Name = 'sql_editors_caption'
        ParamType = ptUnknown
      end    
      item
        DataType = ftUnknown
        Name = 'sql_editors_sort_order'
        ParamType = ptUnknown
      end    
      item
        DataType = ftUnknown
        Name = 'sql_editors_carret_pos_x'
        ParamType = ptUnknown
      end    
      item
        DataType = ftUnknown
        Name = 'sql_editors_carret_pos_y'
        ParamType = ptUnknown
      end    
      item
        DataType = ftUnknown
        Name = 'sql_editors_sel_start'
        ParamType = ptUnknown
      end    
      item
        DataType = ftUnknown
        Name = 'sql_editors_sel_end'
        ParamType = ptUnknown
      end    
      item
        DataType = ftUnknown
        Name = 'sql_editors_body'
        ParamType = ptUnknown
      end    
      item
        DataType = ftUnknown
        Name = 'sql_editors_id'
        ParamType = ptUnknown
      end>
    Options = [doCalcDefaults, doPreferPrepared]
    Left = 289
    Top = 409
    ParamData = <    
      item
        DataType = ftUnknown
        Name = 'db_database_id'
        ParamType = ptUnknown
      end    
      item
        DataType = ftUnknown
        Name = 'sql_editor_folders_id'
        ParamType = ptUnknown
      end    
      item
        DataType = ftUnknown
        Name = 'sql_editors_caption'
        ParamType = ptUnknown
      end    
      item
        DataType = ftUnknown
        Name = 'sql_editors_sort_order'
        ParamType = ptUnknown
      end    
      item
        DataType = ftUnknown
        Name = 'sql_editors_carret_pos_x'
        ParamType = ptUnknown
      end    
      item
        DataType = ftUnknown
        Name = 'sql_editors_carret_pos_y'
        ParamType = ptUnknown
      end    
      item
        DataType = ftUnknown
        Name = 'sql_editors_sel_start'
        ParamType = ptUnknown
      end    
      item
        DataType = ftUnknown
        Name = 'sql_editors_sel_end'
        ParamType = ptUnknown
      end    
      item
        DataType = ftUnknown
        Name = 'sql_editors_body'
        ParamType = ptUnknown
      end    
      item
        DataType = ftUnknown
        Name = 'sql_editors_id'
        ParamType = ptUnknown
      end>
  end
  object quSQLFoldersAll: TZQuery
    Connection = UserDB
    UpdateObject = usSQLFolders
    SQL.Strings = (
      'select'
      '  sql_editor_folders.sql_editor_folders_id,'
      '  sql_editor_folders.sql_editor_folders_name,'
      '  sql_editor_folders.sql_editor_folders_code,'
      '  sql_editor_folders.sql_editor_folders_desc,'
      '  sql_editor_folders.db_database_id'
      'from'
      '  sql_editor_folders'
      'order by'
      '  sql_editor_folders.sql_editor_folders_code'
    )
    Params = <>
    Left = 121
    Top = 352
    object quSQLFoldersAllsql_editor_folders_id: TLargeintField
      FieldKind = fkData
      FieldName = 'sql_editor_folders_id'
      Index = 0
      LookupCache = False
      ProviderFlags = [pfInUpdate, pfInWhere]
      ReadOnly = False
      Required = False
    end
    object quSQLFoldersAllsql_editor_folders_name: TStringField
      FieldKind = fkData
      FieldName = 'sql_editor_folders_name'
      Index = 1
      LookupCache = False
      ProviderFlags = [pfInUpdate, pfInWhere]
      ReadOnly = False
      Required = False
      Size = 400
    end
    object quSQLFoldersAllsql_editor_folders_code: TLargeintField
      FieldKind = fkData
      FieldName = 'sql_editor_folders_code'
      Index = 2
      LookupCache = False
      ProviderFlags = [pfInUpdate, pfInWhere]
      ReadOnly = False
      Required = False
    end
    object quSQLFoldersAllsql_editor_folders_desc: TMemoField
      FieldKind = fkData
      FieldName = 'sql_editor_folders_desc'
      Index = 3
      LookupCache = False
      ProviderFlags = [pfInUpdate, pfInWhere]
      ReadOnly = False
      Required = False
      BlobType = ftMemo
      Transliterate = False
    end
    object quSQLFoldersAlldb_database_id: TLargeintField
      FieldKind = fkData
      FieldName = 'db_database_id'
      Index = 4
      LookupCache = False
      ProviderFlags = [pfInUpdate, pfInWhere]
      ReadOnly = False
      Required = False
    end
  end
  object quSQLFoldersIns: TZReadOnlyQuery
    Connection = UserDB
    SQL.Strings = (
      'INSERT INTO sql_editor_folders'
      '  (sql_editor_folders_name, sql_editor_folders_code,  sql_editor_folders_desc, db_database_id)'
      'VALUES'
      '  (:sql_editor_folders_name, :sql_editor_folders_code,  :sql_editor_folders_desc, :db_database_id)'
    )
    Params = <    
      item
        DataType = ftUnknown
        Name = 'sql_editor_folders_name'
        ParamType = ptUnknown
      end    
      item
        DataType = ftUnknown
        Name = 'sql_editor_folders_code'
        ParamType = ptUnknown
      end    
      item
        DataType = ftUnknown
        Name = 'sql_editor_folders_desc'
        ParamType = ptUnknown
      end    
      item
        DataType = ftUnknown
        Name = 'db_database_id'
        ParamType = ptUnknown
      end>
    Options = [doCalcDefaults, doPreferPrepared]
    Left = 344
    Top = 352
    ParamData = <    
      item
        DataType = ftUnknown
        Name = 'sql_editor_folders_name'
        ParamType = ptUnknown
      end    
      item
        DataType = ftUnknown
        Name = 'sql_editor_folders_code'
        ParamType = ptUnknown
      end    
      item
        DataType = ftUnknown
        Name = 'sql_editor_folders_desc'
        ParamType = ptUnknown
      end    
      item
        DataType = ftUnknown
        Name = 'db_database_id'
        ParamType = ptUnknown
      end>
  end
  object quSQLPagesIns: TZReadOnlyQuery
    Connection = UserDB
    SQL.Strings = (
      'INSERT INTO sql_editors'
      '  (db_database_id, sql_editor_folders_id, sql_editors_caption, '
      '   sql_editors_sort_order, sql_editors_carret_pos_x, sql_editors_carret_pos_y, '
      '   sql_editors_sel_start, sql_editors_sel_end, sql_editors_body)'
      'VALUES'
      '  ( :db_database_id, :sql_editor_folders_id, :sql_editors_caption, '
      '   :sql_editors_sort_order, :sql_editors_carret_pos_x, :sql_editors_carret_pos_y, '
      '   :sql_editors_sel_start, :sql_editors_sel_end, :sql_editors_body)'
      ''
    )
    Params = <    
      item
        DataType = ftUnknown
        Name = 'db_database_id'
        ParamType = ptUnknown
      end    
      item
        DataType = ftUnknown
        Name = 'sql_editor_folders_id'
        ParamType = ptUnknown
      end    
      item
        DataType = ftUnknown
        Name = 'sql_editors_caption'
        ParamType = ptUnknown
      end    
      item
        DataType = ftUnknown
        Name = 'sql_editors_sort_order'
        ParamType = ptUnknown
      end    
      item
        DataType = ftUnknown
        Name = 'sql_editors_carret_pos_x'
        ParamType = ptUnknown
      end    
      item
        DataType = ftUnknown
        Name = 'sql_editors_carret_pos_y'
        ParamType = ptUnknown
      end    
      item
        DataType = ftUnknown
        Name = 'sql_editors_sel_start'
        ParamType = ptUnknown
      end    
      item
        DataType = ftUnknown
        Name = 'sql_editors_sel_end'
        ParamType = ptUnknown
      end    
      item
        DataType = ftUnknown
        Name = 'sql_editors_body'
        ParamType = ptUnknown
      end>
    Options = [doCalcDefaults, doPreferPrepared]
    Left = 344
    Top = 409
    ParamData = <    
      item
        DataType = ftUnknown
        Name = 'db_database_id'
        ParamType = ptUnknown
      end    
      item
        DataType = ftUnknown
        Name = 'sql_editor_folders_id'
        ParamType = ptUnknown
      end    
      item
        DataType = ftUnknown
        Name = 'sql_editors_caption'
        ParamType = ptUnknown
      end    
      item
        DataType = ftUnknown
        Name = 'sql_editors_sort_order'
        ParamType = ptUnknown
      end    
      item
        DataType = ftUnknown
        Name = 'sql_editors_carret_pos_x'
        ParamType = ptUnknown
      end    
      item
        DataType = ftUnknown
        Name = 'sql_editors_carret_pos_y'
        ParamType = ptUnknown
      end    
      item
        DataType = ftUnknown
        Name = 'sql_editors_sel_start'
        ParamType = ptUnknown
      end    
      item
        DataType = ftUnknown
        Name = 'sql_editors_sel_end'
        ParamType = ptUnknown
      end    
      item
        DataType = ftUnknown
        Name = 'sql_editors_body'
        ParamType = ptUnknown
      end>
  end
  object quLastID: TZReadOnlyQuery
    Connection = UserDB
    SQL.Strings = (
      'SELECT last_insert_rowid()'
    )
    Params = <>
    Options = [doCalcDefaults, doPreferPrepared]
    Left = 40
    Top = 64
  end
  object quRecentClear: TZReadOnlyQuery
    Connection = UserDB
    SQL.Strings = (
      'delete'
      'from'
      '  db_recent_objects'
      'where'
      '    db_recent_objects.db_recent_objects_type in (0, 5)'
      '  and'
      '    db_recent_objects.db_database_id = :db_database_id'
    )
    Params = <    
      item
        DataType = ftUnknown
        Name = 'db_database_id'
        ParamType = ptUnknown
      end>
    Options = [doCalcDefaults, doPreferPrepared]
    Left = 272
    Top = 248
    ParamData = <    
      item
        DataType = ftUnknown
        Name = 'db_database_id'
        ParamType = ptUnknown
      end>
  end
  object quInsRecent: TZReadOnlyQuery
    Connection = UserDB
    SQL.Strings = (
      'INSERT INTO db_recent_objects'
      '  (db_database_id, db_recent_objects_type, db_recent_objects_name, '
      '   db_recent_objects_date)'
      'VALUES'
      '  (:db_database_id, :db_recent_objects_type, :db_recent_objects_name, '
      '   :db_recent_objects_date)'
    )
    Params = <    
      item
        DataType = ftUnknown
        Name = 'db_database_id'
        ParamType = ptUnknown
      end    
      item
        DataType = ftUnknown
        Name = 'db_recent_objects_type'
        ParamType = ptUnknown
      end    
      item
        DataType = ftUnknown
        Name = 'db_recent_objects_name'
        ParamType = ptUnknown
      end    
      item
        DataType = ftUnknown
        Name = 'db_recent_objects_date'
        ParamType = ptUnknown
      end>
    Options = [doCalcDefaults, doPreferPrepared]
    Left = 320
    Top = 248
    ParamData = <    
      item
        DataType = ftUnknown
        Name = 'db_database_id'
        ParamType = ptUnknown
      end    
      item
        DataType = ftUnknown
        Name = 'db_recent_objects_type'
        ParamType = ptUnknown
      end    
      item
        DataType = ftUnknown
        Name = 'db_recent_objects_name'
        ParamType = ptUnknown
      end    
      item
        DataType = ftUnknown
        Name = 'db_recent_objects_date'
        ParamType = ptUnknown
      end>
  end
  object quDatabasesItem: TZQuery
    Connection = UserDB
    UpdateObject = usDatabases
    SQL.Strings = (
      'select'
      '  db_database.db_database_id,'
      '  db_database.db_folders_id,'
      '  db_database.db_database_caption,'
      '  db_database.db_database_sql_engine,'
      '  db_database.db_database_server_name,'
      '  db_database.db_database_database_name,'
      '  db_database.db_database_username,'
      '  db_database.db_database_password,'
      '  db_database.db_database_user_role,'
      '  db_database.db_database_connected_charset,'
      '  db_database.db_database_server_version,'
      '  db_database.db_database_remote_port,'
      '  db_database.db_database_description,'
      '  db_database.db_database_sort_order,'
      '  db_database.report_manager_folder,'
      '  db_database.sp_editor_lazzy_mode,'
      '  db_database.trg_editor_lazzy_mode,'
      '  db_database.show_system_domains,'
      '  db_database.show_system_tables,'
      '  db_database.show_system_views,'
      '  db_database.db_database_shedule,'
      '  db_database.db_database_library_name,'
      '  db_database.db_database_authentication_type,'
      '  db_database.db_database_auto_grant,'
      '  db_database.db_database_use_log_meta,'
      '  db_database.db_database_use_log_editor,'
      '  db_database.db_database_log_meta_filename,'
      '  db_database.db_database_log_editor_filename,'
      '  db_database.db_database_use_log_meta_custom_charset,'
      '  db_database.db_database_use_log_write_timestamp,'
      '  db_database.db_database_log_meta_custom_charset,'
      '  db_database.show_child_objects,'
      '  db_database.db_database_log_script_exec_filename,'
      '  db_database.db_database_use_log_script_exec'
      'from'
      '  db_database'
      'where'
      '  (db_database.db_database_id = :db_database_id)'
      'order by'
      '  coalesce(db_database.db_folders_id, -1),'
      '  db_database.db_database_sort_order'
    )
    Params = <    
      item
        DataType = ftUnknown
        Name = 'db_database_id'
        ParamType = ptUnknown
      end>
    Left = 272
    Top = 136
    ParamData = <    
      item
        DataType = ftUnknown
        Name = 'db_database_id'
        ParamType = ptUnknown
      end>
  end
  object quFoldersItem: TZQuery
    Connection = UserDB
    UpdateObject = usFolders
    SQL.Strings = (
      'select'
      '  db_folders.db_folders_id,'
      '  db_folders.db_folders_code,'
      '  db_folders.db_folders_name,'
      '  db_folders.db_folders_desc,'
      '  db_folders.db_folders_expanded'
      'from'
      '  db_folders'
      'where'
      '  db_folders.db_folders_id = :db_folders_id'
    )
    Params = <    
      item
        DataType = ftUnknown
        Name = 'db_folders_id'
        ParamType = ptUnknown
      end>
    Left = 272
    Top = 78
    ParamData = <    
      item
        DataType = ftUnknown
        Name = 'db_folders_id'
        ParamType = ptUnknown
      end>
  end
  object quFoldersDel: TZQuery
    Connection = UserDB
    UpdateObject = usFolders
    SQL.Strings = (
      'DELETE FROM db_folders'
      'WHERE'
      '  db_folders.db_folders_id = :db_folders_id'
    )
    Params = <    
      item
        DataType = ftUnknown
        Name = 'db_folders_id'
        ParamType = ptUnknown
      end>
    Left = 313
    Top = 78
    ParamData = <    
      item
        DataType = ftUnknown
        Name = 'db_folders_id'
        ParamType = ptUnknown
      end>
  end
  object quOldDatabases: TZQuery
    Connection = UserDB
    UpdateObject = usDatabases
    SQL.Strings = (
      'select'
      '  db_database.db_database_id,'
      '  db_database.db_folders_id,'
      '  db_database.db_database_caption,'
      '  db_database.db_database_sql_engine,'
      '  db_database.db_database_server_name,'
      '  db_database.db_database_database_name,'
      '  db_database.db_database_username,'
      '  db_database.db_database_password,'
      '  db_database.db_database_user_role,'
      '  db_database.db_database_connected_charset,'
      '  db_database.db_database_server_version,'
      '  db_database.db_database_remote_port,'
      '  db_database.db_database_description,'
      '  db_database.db_database_sort_order,'
      '  db_database.report_manager_folder,'
      '  db_database.sp_editor_lazzy_mode,'
      '  db_database.trg_editor_lazzy_mode,'
      '  db_database.show_system_domains,'
      '  db_database.show_system_tables,'
      '  db_database.show_system_views,'
      '  db_database.db_database_shedule,'
      '  db_database.db_database_library_name,'
      '  db_database.db_database_authentication_type,'
      '  db_database.db_database_auto_grant,'
      '  db_database.db_database_use_log_meta,'
      '  db_database.db_database_use_log_editor,'
      '  db_database.db_database_log_meta_filename,'
      '  db_database.db_database_log_editor_filename,'
      '  db_database.db_database_use_log_meta_custom_charset,'
      '  db_database.db_database_use_log_write_timestamp,'
      '  db_database.db_database_log_meta_custom_charset'
      'from'
      '  db_database'
      'order by'
      '  coalesce(db_database.db_folders_id, -1),'
      '  db_database.db_database_sort_order'
    )
    Params = <>
    Left = 640
    Top = 130
  end
  object quSQLPagesUpdSO: TZQuery
    Connection = UserDB
    UpdateObject = ZUpdateSQL4
    SQL.Strings = (
      'UPDATE '
      '  sql_editors '
      'SET'
      '  sql_editor_folders_id = :sql_editor_folders_id,'
      '  sql_editors_sort_order = :sql_editors_sort_order'
      'WHERE'
      '  (sql_editors.sql_editors_id = :sql_editors_id)'
    )
    Params = <    
      item
        DataType = ftUnknown
        Name = 'sql_editor_folders_id'
        ParamType = ptUnknown
      end    
      item
        DataType = ftUnknown
        Name = 'sql_editors_sort_order'
        ParamType = ptUnknown
      end    
      item
        DataType = ftUnknown
        Name = 'sql_editors_id'
        ParamType = ptUnknown
      end>
    Left = 392
    Top = 409
    ParamData = <    
      item
        DataType = ftUnknown
        Name = 'sql_editor_folders_id'
        ParamType = ptUnknown
      end    
      item
        DataType = ftUnknown
        Name = 'sql_editors_sort_order'
        ParamType = ptUnknown
      end    
      item
        DataType = ftUnknown
        Name = 'sql_editors_id'
        ParamType = ptUnknown
      end>
  end
  object quSQLPagesDel: TZReadOnlyQuery
    Connection = UserDB
    SQL.Strings = (
      'delete'
      'from'
      '  sql_editors '
      'WHERE'
      '  sql_editors.sql_editors_id = :sql_editors_id'
    )
    Params = <    
      item
        DataType = ftUnknown
        Name = 'sql_editors_id'
        ParamType = ptUnknown
      end>
    Options = [doCalcDefaults, doPreferPrepared]
    Left = 432
    Top = 409
    ParamData = <    
      item
        DataType = ftUnknown
        Name = 'sql_editors_id'
        ParamType = ptUnknown
      end>
  end
  object UpdDB2: TZSQLProcessor
    Params = <>
    Script.Strings = (
      'PRAGMA foreign_keys=OFF;'
      'BEGIN TRANSACTION;'
      'CREATE TABLE IF NOT EXISTS db_connection_plugin_data('
      '/* Информация подключаемых модулей */'
      '  db_database_id INTEGER /* ID базы данных */,'
      '  db_connection_plugin_data_class_type VARCHAR(255) /* Тип плагина */,'
      '  db_connection_plugin_data_variable_name VARCHAR(150) /* Имя переменной */,'
      '  db_connection_plugin_data_variable_value VARCHAR(255) /* Значение переменной */,'
      ' PRIMARY KEY (db_database_id, db_connection_plugin_data_class_type, db_connection_plugin_data_variable_name)'
      ' CONSTRAINT fk_db_connection_plugin_data_1 FOREIGN KEY (db_database_id) REFERENCES db_database (db_database_id) ON UPDATE CASCADE ON DELETE CASCADE'
      ');'
      ' COMMIT; '
    )
    Connection = UserDB
    Delimiter = ';'
    Left = 745
    Top = 8
  end
  object usConnectionPlugins: TZUpdateSQL
    DeleteSQL.Strings = (
      'DELETE FROM db_connection_plugin_data'
      'WHERE'
      '  ((db_connection_plugin_data.db_database_id IS NULL AND :OLD_db_database_id IS NULL) OR (db_connection_plugin_data.db_database_id = :OLD_db_database_id)) AND'
      '  ((db_connection_plugin_data.db_connection_plugin_data_class_type IS NULL AND :OLD_db_connection_plugin_data_class_type IS NULL) OR (db_connection_plugin_data.db_connection_plugin_data_class_type = :OLD_db_connection_plugin_data_class_type)) AND'
      '  ((db_connection_plugin_data.db_connection_plugin_data_variable_name IS NULL AND :OLD_db_connection_plugin_data_variable_name IS NULL) OR (db_connection_plugin_data.db_connection_plugin_data_variable_name = :OLD_db_connection_plugin_data_variable_name))'
    )
    InsertSQL.Strings = (
      'INSERT INTO db_connection_plugin_data'
      '  (db_database_id, db_connection_plugin_data_class_type, db_connection_plugin_data_variable_name, '
      '   db_connection_plugin_data_variable_value)'
      'VALUES'
      '  (:db_database_id, :db_connection_plugin_data_class_type, :db_connection_plugin_data_variable_name, '
      '   :db_connection_plugin_data_variable_value)'
    )
    ModifySQL.Strings = (
      'UPDATE db_connection_plugin_data SET'
      '  db_database_id = :db_database_id,'
      '  db_connection_plugin_data_class_type = :db_connection_plugin_data_class_type,'
      '  db_connection_plugin_data_variable_name = :db_connection_plugin_data_variable_name,'
      '  db_connection_plugin_data_variable_value = :db_connection_plugin_data_variable_value'
      'WHERE'
      '  ((db_connection_plugin_data.db_database_id IS NULL AND :OLD_db_database_id IS NULL) OR (db_connection_plugin_data.db_database_id = :OLD_db_database_id)) AND'
      '  ((db_connection_plugin_data.db_connection_plugin_data_class_type IS NULL AND :OLD_db_connection_plugin_data_class_type IS NULL) OR (db_connection_plugin_data.db_connection_plugin_data_class_type = :OLD_db_connection_plugin_data_class_type)) AND'
      '  ((db_connection_plugin_data.db_connection_plugin_data_variable_name IS NULL AND :OLD_db_connection_plugin_data_variable_name IS NULL) OR (db_connection_plugin_data.db_connection_plugin_data_variable_name = :OLD_db_connection_plugin_data_variable_name))'
    )
    UseSequenceFieldForRefreshSQL = False
    Left = 232
    Top = 464
    ParamData = <    
      item
        DataType = ftUnknown
        Name = 'db_database_id'
        ParamType = ptUnknown
      end    
      item
        DataType = ftUnknown
        Name = 'db_connection_plugin_data_class_type'
        ParamType = ptUnknown
      end    
      item
        DataType = ftUnknown
        Name = 'db_connection_plugin_data_variable_name'
        ParamType = ptUnknown
      end    
      item
        DataType = ftUnknown
        Name = 'db_connection_plugin_data_variable_value'
        ParamType = ptUnknown
      end    
      item
        DataType = ftUnknown
        Name = 'OLD_db_database_id'
        ParamType = ptUnknown
      end    
      item
        DataType = ftUnknown
        Name = 'OLD_db_connection_plugin_data_class_type'
        ParamType = ptUnknown
      end    
      item
        DataType = ftUnknown
        Name = 'OLD_db_connection_plugin_data_variable_name'
        ParamType = ptUnknown
      end>
  end
  object quConnectionPlugins: TZQuery
    Connection = UserDB
    UpdateObject = usConnectionPlugins
    SQL.Strings = (
      'select'
      '  db_connection_plugin_data.db_database_id,'
      '  db_connection_plugin_data.db_connection_plugin_data_class_type,'
      '  db_connection_plugin_data.db_connection_plugin_data_variable_name,'
      '  db_connection_plugin_data.db_connection_plugin_data_variable_value'
      'from'
      '  db_connection_plugin_data'
      'where'
      '  db_connection_plugin_data.db_database_id = :db_database_id'
    )
    Params = <    
      item
        DataType = ftUnknown
        Name = 'db_database_id'
        ParamType = ptUnknown
      end>
    Left = 192
    Top = 464
    ParamData = <    
      item
        DataType = ftUnknown
        Name = 'db_database_id'
        ParamType = ptUnknown
      end>
  end
  object UpdDB3: TZSQLProcessor
    Params = <>
    Script.Strings = (
      'PRAGMA foreign_keys=OFF;'
      'BEGIN TRANSACTION;'
      ''
      'CREATE TABLE IF NOT EXISTS db_connection_options('
      '  db_database_id INTEGER,'
      '  db_connection_options_name VARCHAR(100),'
      '  db_connection_options_value VARCHAR(500),'
      '  PRIMARY KEY (db_database_id, db_connection_options_name)'
      '  CONSTRAINT fk_db_connection_options_1 FOREIGN KEY (db_database_id) REFERENCES db_database (db_database_id) ON UPDATE CASCADE ON DELETE CASCADE'
      ');'
      ''
      ' COMMIT; '
    )
    Connection = UserDB
    Delimiter = ';'
    Left = 745
    Top = 66
  end
  object quDBOptions: TZQuery
    Connection = UserDB
    UpdateObject = usDBOptions
    SQL.Strings = (
      'select'
      '  db_connection_options.db_database_id,'
      '  db_connection_options.db_connection_options_name,'
      '  db_connection_options.db_connection_options_value'
      'from'
      '  db_connection_options'
    )
    Params = <>
    Left = 392
    Top = 136
  end
  object usDBOptions: TZUpdateSQL
    DeleteSQL.Strings = (
      'DELETE FROM db_connection_options'
      'WHERE'
      '  ((db_connection_options.db_database_id IS NULL AND :OLD_db_database_id IS NULL) OR (db_connection_options.db_database_id = :OLD_db_database_id)) AND'
      '  ((db_connection_options.db_connection_options_name IS NULL AND :OLD_db_connection_options_name IS NULL) OR (db_connection_options.db_connection_options_name = :OLD_db_connection_options_name))'
    )
    InsertSQL.Strings = (
      'INSERT INTO db_connection_options'
      '  (db_database_id, db_connection_options_name, db_connection_options_value)'
      'VALUES'
      '  (:db_database_id, :db_connection_options_name, :db_connection_options_value)'
    )
    ModifySQL.Strings = (
      'UPDATE db_connection_options SET'
      '  db_database_id = :db_database_id,'
      '  db_connection_options_name = :db_connection_options_name,'
      '  db_connection_options_value = :db_connection_options_value'
      'WHERE'
      '  ((db_connection_options.db_database_id IS NULL AND :OLD_db_database_id IS NULL) OR (db_connection_options.db_database_id = :OLD_db_database_id)) AND'
      '  ((db_connection_options.db_connection_options_name IS NULL AND :OLD_db_connection_options_name IS NULL) OR (db_connection_options.db_connection_options_name = :OLD_db_connection_options_name))'
    )
    UseSequenceFieldForRefreshSQL = False
    Left = 432
    Top = 136
    ParamData = <    
      item
        DataType = ftUnknown
        Name = 'db_database_id'
        ParamType = ptUnknown
      end    
      item
        DataType = ftUnknown
        Name = 'db_connection_options_name'
        ParamType = ptUnknown
      end    
      item
        DataType = ftUnknown
        Name = 'db_connection_options_value'
        ParamType = ptUnknown
      end    
      item
        DataType = ftUnknown
        Name = 'OLD_db_database_id'
        ParamType = ptUnknown
      end    
      item
        DataType = ftUnknown
        Name = 'OLD_db_connection_options_name'
        ParamType = ptUnknown
      end>
  end
  object quDBOptionsItems: TZQuery
    Connection = UserDB
    UpdateObject = usDBOptions
    SQL.Strings = (
      'select'
      '  db_connection_options.db_database_id,'
      '  db_connection_options.db_connection_options_name,'
      '  db_connection_options.db_connection_options_value'
      'from'
      '  db_connection_options'
      'where'
      '  db_connection_options.db_database_id = :db_database_id'
    )
    Params = <    
      item
        DataType = ftUnknown
        Name = 'db_database_id'
        ParamType = ptUnknown
      end>
    Left = 472
    Top = 136
    ParamData = <    
      item
        DataType = ftUnknown
        Name = 'db_database_id'
        ParamType = ptUnknown
      end>
    object quDBOptionsItemsdb_database_id: TLargeintField
      FieldKind = fkData
      FieldName = 'db_database_id'
      Index = 0
      LookupCache = False
      ProviderFlags = [pfInUpdate, pfInWhere]
      ReadOnly = False
      Required = False
    end
    object quDBOptionsItemsdb_connection_options_name: TStringField
      FieldKind = fkData
      FieldName = 'db_connection_options_name'
      Index = 1
      LookupCache = False
      ProviderFlags = [pfInUpdate, pfInWhere]
      ReadOnly = False
      Required = False
      Size = 400
    end
    object quDBOptionsItemsdb_connection_options_value: TStringField
      FieldKind = fkData
      FieldName = 'db_connection_options_value'
      Index = 2
      LookupCache = False
      ProviderFlags = [pfInUpdate, pfInWhere]
      ReadOnly = False
      Required = False
      Size = 2000
    end
  end
  object UpdDB4: TZSQLProcessor
    Params = <>
    Script.Strings = (
      'PRAGMA foreign_keys=OFF;'
      'BEGIN TRANSACTION;'
      ''
      'ALTER TABLE db_database ADD COLUMN show_child_objects BOOLEAN;'
      ''
      'COMMIT; '
    )
    Connection = UserDB
    Delimiter = ';'
    Left = 745
    Top = 144
  end
  object UpdDB5: TZSQLProcessor
    Params = <>
    Script.Strings = (
      'PRAGMA foreign_keys=OFF;'
      'BEGIN TRANSACTION;'
      ''
      'ALTER TABLE db_database ADD COLUMN db_database_log_script_exec_filename CHAR(250) /* Протоколирование исполнения скриптов */;'
      ''
      'ALTER TABLE db_database ADD COLUMN db_database_use_log_script_exec BOOLEAN /* Использовать протоколирование редактора скриптов */;'
      ''
      ' COMMIT; '
    )
    Connection = UserDB
    Delimiter = ';'
    Left = 745
    Top = 200
  end
  object ZSQLMonitor1: TZSQLMonitor
    Active = True
    MaxTraceCount = 50
    Left = 40
    Top = 128
  end
end
